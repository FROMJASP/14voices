version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: 14voices-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fourteenvoices
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: 14voices-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    ports:
      - '9000:9000' # MinIO API
      - '9001:9001' # MinIO Console
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Client - Creates bucket on startup
  createbuckets:
    image: minio/mc:latest
    container_name: 14voices-mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin123;
      /usr/bin/mc mb --ignore-existing minio/fourteenvoices-media;
      /usr/bin/mc anonymous set public minio/fourteenvoices-media;
      exit 0;
      "
    networks:
      - app-network

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: 14voices-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      # Database
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/fourteenvoices

      # Storage (MinIO)
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin123
      S3_BUCKET: fourteenvoices-media
      S3_REGION: us-east-1
      # Public URL for accessing files from outside Docker
      S3_PUBLIC_URL: http://localhost:9000

      # Application
      NEXT_PUBLIC_SERVER_URL: http://localhost:3000
      NODE_ENV: production

      # Add other required environment variables from .env.example
      PAYLOAD_SECRET: ${PAYLOAD_SECRET}
      RESEND_API_KEY: ${RESEND_API_KEY}
      CSRF_SECRET: ${CSRF_SECRET}
    ports:
      - '3000:3000'
    networks:
      - app-network
    volumes:
      # Optional: For development, you can mount source code
      # - ./src:/app/src:ro
      # - ./public:/app/public:ro

      # Persist uploads locally (backup)
      - uploads_data:/app/public/uploads

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
  uploads_data:
