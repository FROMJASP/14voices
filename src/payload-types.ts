/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    cohorts: Cohort;
    voiceovers: Voiceover;
    bookings: Booking;
    scripts: Script;
    invoices: Invoice;
    'blog-posts': BlogPost;
    pages: Page;
    forms: Form;
    'form-submissions': FormSubmission;
    testimonials: Testimonial;
    faq: FAQ;
    'email-components': EmailComponent;
    'email-templates': EmailTemplate;
    'email-sequences': EmailSequence;
    'email-logs': EmailLog;
    'email-jobs': EmailJob;
    'email-campaigns': EmailCampaign;
    'email-audiences': EmailAudience;
    'email-contacts': EmailContact;
    'security-logs': SecurityLog;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    cohorts: CohortsSelect<false> | CohortsSelect<true>;
    voiceovers: VoiceoversSelect<false> | VoiceoversSelect<true>;
    bookings: BookingsSelect<false> | BookingsSelect<true>;
    scripts: ScriptsSelect<false> | ScriptsSelect<true>;
    invoices: InvoicesSelect<false> | InvoicesSelect<true>;
    'blog-posts': BlogPostsSelect<false> | BlogPostsSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    'email-components': EmailComponentsSelect<false> | EmailComponentsSelect<true>;
    'email-templates': EmailTemplatesSelect<false> | EmailTemplatesSelect<true>;
    'email-sequences': EmailSequencesSelect<false> | EmailSequencesSelect<true>;
    'email-logs': EmailLogsSelect<false> | EmailLogsSelect<true>;
    'email-jobs': EmailJobsSelect<false> | EmailJobsSelect<true>;
    'email-campaigns': EmailCampaignsSelect<false> | EmailCampaignsSelect<true>;
    'email-audiences': EmailAudiencesSelect<false> | EmailAudiencesSelect<true>;
    'email-contacts': EmailContactsSelect<false> | EmailContactsSelect<true>;
    'security-logs': SecurityLogsSelect<false> | SecurityLogsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'email-settings': EmailSetting;
    'site-settings': SiteSetting;
  };
  globalsSelect: {
    'email-settings': EmailSettingsSelect<false> | EmailSettingsSelect<true>;
    'site-settings': SiteSettingsSelect<false> | SiteSettingsSelect<true>;
  };
  locale: 'nl' | 'en';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  /**
   * Upload a custom profile photo
   */
  avatar?: (number | null) | Media;
  avatarURL?: string | null;
  /**
   * Color for default avatar when no image is uploaded
   */
  avatarColor?: string | null;
  /**
   * User account status
   */
  status: 'active' | 'inactive' | 'suspended';
  role: 'admin' | 'editor' | 'user';
  /**
   * Department or team the user belongs to
   */
  department?: ('management' | 'production' | 'marketing' | 'finance' | 'support' | 'other') | null;
  /**
   * Job title or position
   */
  jobTitle?: string | null;
  /**
   * Phone number (including country code)
   */
  phone?: string | null;
  /**
   * Short biography or description
   */
  bio?: string | null;
  /**
   * User timezone preference
   */
  timezone?:
    | (
        | 'Europe/Amsterdam'
        | 'Europe/London'
        | 'Europe/Paris'
        | 'Europe/Berlin'
        | 'America/New_York'
        | 'America/Chicago'
        | 'America/Los_Angeles'
        | 'Asia/Tokyo'
        | 'Asia/Shanghai'
        | 'Australia/Sydney'
      )
    | null;
  /**
   * Social media profiles
   */
  socialLinks?: {
    linkedin?: string | null;
    twitter?: string | null;
    github?: string | null;
    website?: string | null;
  };
  /**
   * Your preferred language for the admin interface
   */
  preferredLanguage?: ('nl' | 'en') | null;
  emailPreferences?: {
    /**
     * User has unsubscribed from all emails
     */
    unsubscribed?: boolean | null;
    /**
     * Receive marketing emails
     */
    marketing?: boolean | null;
    /**
     * Receive transactional emails (bookings, invoices)
     */
    transactional?: boolean | null;
    /**
     * Receive product updates and announcements
     */
    updates?: boolean | null;
  };
  /**
   * Security and authentication settings
   */
  security?: {
    /**
     * Last successful login timestamp
     */
    lastLogin?: string | null;
    /**
     * Total number of successful logins
     */
    loginCount?: number | null;
    /**
     * Two-factor authentication enabled
     */
    twoFactorEnabled?: boolean | null;
    /**
     * Last password change timestamp
     */
    passwordChangedAt?: string | null;
    /**
     * Recent login history
     */
    loginHistory?:
      | {
          timestamp: string;
          ipAddress?: string | null;
          userAgent?: string | null;
          success?: boolean | null;
          id?: string | null;
        }[]
      | null;
  };
  /**
   * Last login time
   */
  lastLogin?: string | null;
  /**
   * Notification preferences (in-app, push, SMS)
   */
  notifications?: {
    /**
     * Receive in-app notifications
     */
    inApp?: boolean | null;
    /**
     * Receive push notifications
     */
    push?: boolean | null;
    /**
     * Receive SMS notifications
     */
    sms?: boolean | null;
  };
  /**
   * Additional metadata and notes
   */
  metadata?: {
    /**
     * Tags for categorization
     */
    tags?:
      | {
          tag: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Private notes about this user (admin only)
     */
    notes?: string | null;
    /**
     * Custom fields for additional data
     */
    customFields?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    /**
     * User who created this account
     */
    createdBy?: (number | null) | User;
    /**
     * Last user who updated this account
     */
    updatedBy?: (number | null) | User;
  };
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  /**
   * Alternative text for images (required for accessibility)
   */
  alt?: string | null;
  /**
   * Optional caption for audio files
   */
  caption?: string | null;
  uploadedBy: number | User;
  scanStatus?: ('pending' | 'safe' | 'suspicious' | 'blocked') | null;
  scanDetails?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cohorts".
 */
export interface Cohort {
  id: number;
  /**
   * Name of the cohort (e.g., "November 2025", "Summer Voices")
   */
  name: string;
  /**
   * URL-friendly version (e.g., "nov-2025")
   */
  slug: string;
  /**
   * Color for the cohort badge
   */
  color: 'blue' | 'purple' | 'green' | 'yellow' | 'red' | 'pink' | 'orange' | 'teal' | 'indigo' | 'gray';
  /**
   * Optional description of this cohort
   */
  description?: string | null;
  /**
   * Whether this cohort is currently active
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "voiceovers".
 */
export interface Voiceover {
  id: number;
  /**
   * The name of the voiceover artist
   */
  name: string;
  /**
   * URL-friendly version of the name
   */
  slug: string;
  /**
   * Optional description or bio
   */
  description?: string | null;
  /**
   * Primary profile photo for this voiceover artist
   */
  profilePhoto?: (number | null) | Media;
  /**
   * Additional profile photos
   */
  additionalPhotos?:
    | {
        photo: number | Media;
        /**
         * Optional caption for this photo
         */
        caption?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Select at least 3 style tags
   */
  styleTags: {
    tag:
      | 'autoriteit'
      | 'jeugdig-fris'
      | 'kwaliteit'
      | 'stoer'
      | 'warm-donker'
      | 'zakelijk'
      | 'eigentijds'
      | 'gezellig-genieten'
      | 'helder'
      | 'naturel'
      | 'urban'
      | 'vernieuwend'
      | 'vriendelijk-vrolijk'
      | 'custom';
    /**
     * Enter your custom tag
     */
    customTag?: string | null;
    id?: string | null;
  }[];
  /**
   * Full demo reel audio file
   */
  fullDemoReel?: (number | null) | Media;
  /**
   * Commercials demo audio file
   */
  commercialsDemo?: (number | null) | Media;
  /**
   * Narrative demo audio file
   */
  narrativeDemo?: (number | null) | Media;
  /**
   * Controls where this voiceover appears on the website. More Voices (uit het archief) = Deze voiceover wordt getoond in de 'uit het archief' sectie onder de 14 stemmen die in het groot worden getoond
   */
  status: 'active' | 'draft' | 'more-voices' | 'archived';
  /**
   * Optional cohort this voiceover belongs to (each 3-6 months we have a new cohort)
   */
  cohort?: (number | null) | Cohort;
  availability?: {
    /**
     * Is this voiceover currently available for bookings?
     */
    isAvailable?: boolean | null;
    /**
     * Start date of unavailability (e.g., vacation start)
     */
    unavailableFrom?: string | null;
    /**
     * End date of unavailability (auto-reactivates after this date)
     */
    unavailableUntil?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookings".
 */
export interface Booking {
  id: number;
  /**
   * Brief description of the booking
   */
  title: string;
  /**
   * Customer who created the booking
   */
  customer: number | User;
  /**
   * Assigned voiceover artist
   */
  voiceover?: (number | null) | Voiceover;
  status: 'pending' | 'confirmed' | 'in_progress' | 'completed' | 'cancelled';
  projectType: 'commercial' | 'narration' | 'elearning' | 'corporate' | 'other';
  deadline?: string | null;
  /**
   * Budget in USD
   */
  budget?: number | null;
  /**
   * Additional notes or requirements
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Scripts uploaded by clients for voiceover work
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "scripts".
 */
export interface Script {
  id: number;
  /**
   * Title of the script or project
   */
  title: string;
  /**
   * Client who uploaded the script
   */
  uploadedBy?: (number | null) | User;
  /**
   * Voiceover artist assigned to read this script
   */
  assignedVoiceover?: (number | null) | Voiceover;
  scriptType:
    | 'commercial'
    | 'narration'
    | 'elearning'
    | 'audiobook'
    | 'videogame'
    | 'animation'
    | 'corporate'
    | 'other';
  language: 'en' | 'es' | 'fr' | 'de' | 'it' | 'pt' | 'nl' | 'other';
  /**
   * Estimated word count (auto-calculated when possible)
   */
  wordCount?: number | null;
  /**
   * Estimated reading duration in minutes
   */
  estimatedDuration?: number | null;
  /**
   * Security level of the script content
   */
  confidentialityLevel: 'public' | 'standard' | 'confidential' | 'highly-confidential';
  /**
   * Special instructions for the voiceover artist
   */
  instructions?: string | null;
  /**
   * Original filename before security hashing
   */
  originalFilename?: string | null;
  /**
   * When the script reading needs to be completed
   */
  deadline?: string | null;
  /**
   * Audit log of who accessed this script
   */
  accessLog?:
    | {
        accessedBy: number | User;
        accessedAt: string;
        action: 'viewed' | 'downloaded';
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * Invoice documents with restricted access
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "invoices".
 */
export interface Invoice {
  id: number;
  /**
   * Unique invoice number (e.g., INV-2024-001)
   */
  invoiceNumber: string;
  /**
   * Client who receives the invoice
   */
  client: number | User;
  /**
   * Service provider (voiceover artist)
   */
  provider: number | User;
  status: 'draft' | 'sent' | 'viewed' | 'paid' | 'overdue' | 'cancelled';
  /**
   * Invoice amount in cents
   */
  amount: number;
  currency: 'USD' | 'EUR' | 'GBP' | 'CAD' | 'AUD';
  issueDate: string;
  dueDate: string;
  paidDate?: string | null;
  /**
   * Internal notes (not shown on invoice)
   */
  notes?: string | null;
  /**
   * Audit trail of invoice access
   */
  accessLog?:
    | {
        accessedBy: number | User;
        accessedAt: string;
        action: 'viewed' | 'downloaded' | 'sent';
        id?: string | null;
      }[]
    | null;
  /**
   * Original filename
   */
  originalFilename?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-posts".
 */
export interface BlogPost {
  id: number;
  /**
   * The main title of your blog post
   */
  title: string;
  /**
   * Optional subtitle or tagline
   */
  subtitle?: string | null;
  /**
   * URL-friendly version of the title
   */
  slug?: string | null;
  /**
   * Hero image displayed at the top of the post
   */
  bannerImage: number | Media;
  /**
   * The main content of your blog post
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Short summary for previews and listings (auto-generated if empty)
   */
  excerpt?: string | null;
  meta?: Meta;
  openGraph?: {
    /**
     * OG title for social sharing
     */
    title?: string | null;
    /**
     * OG description for social sharing
     */
    description?: string | null;
    type?: ('article' | 'website') | null;
  };
  /**
   * The author of this post
   */
  author: number | User;
  /**
   * Organize posts by categories
   */
  categories?:
    | {
        category?:
          | ('news' | 'tips-tricks' | 'behind-scenes' | 'industry-insights' | 'voice-acting' | 'technology')
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Add tags for better discoverability
   */
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Post visibility status
   */
  status: 'draft' | 'published' | 'archived';
  /**
   * Schedule post publication
   */
  publishedDate?: string | null;
  /**
   * Feature this post on the homepage
   */
  featured?: boolean | null;
  /**
   * Allow comments on this post
   */
  enableComments?: boolean | null;
  /**
   * Number of times this post has been viewed
   */
  views?: number | null;
  /**
   * Estimated reading time in minutes
   */
  readingTime?: number | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Meta".
 */
export interface Meta {
  /**
   * Override the default title for SEO (defaults to post title)
   */
  title?: string | null;
  /**
   * Meta description for search engines (defaults to excerpt)
   */
  description?: string | null;
  /**
   * SEO keywords for this post
   */
  keywords?:
    | {
        keyword?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Social media preview image (defaults to banner image)
   */
  image?: (number | null) | Media;
  /**
   * Prevent search engines from indexing this page
   */
  noIndex?: boolean | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  /**
   * Page title displayed in browser tabs and search results
   */
  title: string;
  /**
   * URL path for this page (e.g., "about-us")
   */
  slug: string;
  hero?: {
    type?: ('none' | 'simple' | 'image' | 'video' | 'gradient') | null;
    title?: string | null;
    subtitle?: string | null;
    image?: (number | null) | Media;
    /**
     * YouTube or Vimeo URL
     */
    videoUrl?: string | null;
    cta?: {
      text?: string | null;
      link?: string | null;
      style?: ('primary' | 'secondary' | 'outline') | null;
    };
  };
  /**
   * Main page content
   */
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Add content sections to build your page
   */
  sections?:
    | {
        type: 'richText' | 'twoColumn' | 'cta' | 'contact' | 'pricing' | 'testimonials' | 'faq' | 'gallery';
        richTextContent?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        leftColumn?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        rightColumn?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        columnRatio?: ('50-50' | '60-40' | '40-60' | '70-30' | '30-70') | null;
        ctaHeading?: string | null;
        ctaText?: string | null;
        ctaButtons?:
          | {
              text: string;
              link: string;
              style?: ('primary' | 'secondary' | 'outline') | null;
              id?: string | null;
            }[]
          | null;
        ctaBackgroundColor?: ('white' | 'gray' | 'primary' | 'dark') | null;
        contactHeading?: string | null;
        contactSubheading?: string | null;
        showContactForm?: boolean | null;
        contactEmail?: string | null;
        contactPhone?: string | null;
        pricingHeading?: string | null;
        pricingSubheading?: string | null;
        pricingPlans?:
          | {
              name: string;
              price: string;
              description?: string | null;
              features?:
                | {
                    feature: string;
                    id?: string | null;
                  }[]
                | null;
              highlighted?: boolean | null;
              buttonText?: string | null;
              buttonLink?: string | null;
              id?: string | null;
            }[]
          | null;
        testimonialsHeading?: string | null;
        testimonialsSubheading?: string | null;
        testimonialsSource?: ('featured' | 'latest' | 'selected') | null;
        selectedTestimonials?: (number | Testimonial)[] | null;
        testimonialsLimit?: number | null;
        faqHeading?: string | null;
        faqSubheading?: string | null;
        faqs?:
          | {
              question: string;
              answer: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              id?: string | null;
            }[]
          | null;
        galleryHeading?: string | null;
        galleryImages?: (number | Media)[] | null;
        galleryLayout?: ('grid' | 'masonry' | 'carousel') | null;
        id?: string | null;
      }[]
    | null;
  meta?: {
    /**
     * Override page title for SEO (60 chars max)
     */
    title?: string | null;
    /**
     * Meta description for search engines (160 chars max)
     */
    description?: string | null;
    /**
     * SEO keywords for this page
     */
    keywords?:
      | {
          keyword?: string | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Social media preview image
     */
    image?: (number | null) | Media;
    /**
     * Prevent search engines from indexing this page
     */
    noIndex?: boolean | null;
  };
  openGraph?: {
    /**
     * OG title for social sharing
     */
    title?: string | null;
    /**
     * OG description for social sharing
     */
    description?: string | null;
    type?: ('website' | 'article') | null;
  };
  /**
   * Set a parent page to create a hierarchy
   */
  parent?: (number | null) | Page;
  /**
   * Page visibility status
   */
  status: 'draft' | 'published' | 'archived';
  /**
   * Schedule page publication
   */
  publishedDate?: string | null;
  /**
   * Include in navigation menus
   */
  showInNav?: boolean | null;
  /**
   * Order in navigation (lower numbers appear first)
   */
  navOrder?: number | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  /**
   * Client name
   */
  name: string;
  /**
   * Job title or role
   */
  title?: string | null;
  /**
   * Company name
   */
  company?: string | null;
  /**
   * Client photo or avatar
   */
  avatar?: (number | null) | Media;
  /**
   * The testimonial text
   */
  testimonial: string;
  /**
   * Star rating
   */
  rating?: ('5' | '4' | '3' | '2' | '1') | null;
  /**
   * Show in featured testimonials
   */
  featured?: boolean | null;
  publishedDate?: string | null;
  media?: {
    type?: ('none' | 'video' | 'audio') | null;
    /**
     * YouTube or Vimeo URL
     */
    videoUrl?: string | null;
    /**
     * Video thumbnail image
     */
    videoThumbnail?: (number | null) | Media;
    /**
     * Audio testimonial file
     */
    audioFile?: (number | null) | Media;
    /**
     * Duration (e.g., 2:30)
     */
    duration?: string | null;
  };
  project?: {
    /**
     * Related voiceover artist
     */
    voiceover?: (number | null) | Voiceover;
    projectType?:
      | ('commercial' | 'narration' | 'character' | 'elearning' | 'ivr' | 'podcast' | 'audiobook' | 'other')
      | null;
    /**
     * Name of the project
     */
    projectName?: string | null;
    /**
     * When the project was completed
     */
    completedDate?: string | null;
  };
  display?: {
    /**
     * Show company name
     */
    showCompany?: boolean | null;
    /**
     * Show job title
     */
    showTitle?: boolean | null;
    /**
     * Show avatar/photo
     */
    showAvatar?: boolean | null;
    /**
     * Show star rating
     */
    showRating?: boolean | null;
    /**
     * Text to highlight in the testimonial (will be bolded)
     */
    highlightText?: string | null;
    /**
     * Tags for filtering
     */
    tags?:
      | {
          tag?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  status?: ('published' | 'draft' | 'archived') | null;
  updatedAt: string;
  createdAt: string;
}

export interface FAQ {
  id: string;
  question: string;
  answer?: {
    [k: string]: unknown;
  } | null;
  category?: ('general' | 'pricing' | 'technical' | 'delivery' | 'other') | null;
  order?: number | null;
  published?: boolean | null;
  createdAt: string;
  updatedAt: string;
}

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  /**
   * Internal form name
   */
  title: string;
  /**
   * Unique identifier for this form
   */
  slug: string;
  /**
   * Form description shown to users
   */
  description?: string | null;
  status: 'active' | 'inactive' | 'archived';
  fields: {
    fieldType:
      | 'text'
      | 'email'
      | 'tel'
      | 'number'
      | 'textarea'
      | 'select'
      | 'radio'
      | 'checkbox'
      | 'checkboxGroup'
      | 'date'
      | 'time'
      | 'file'
      | 'hidden'
      | 'heading'
      | 'paragraph';
    /**
     * Field name (no spaces, used in code)
     */
    name: string;
    /**
     * Label shown to users
     */
    label?: string | null;
    placeholder?: string | null;
    /**
     * Help text shown below the field
     */
    helpText?: string | null;
    required?: boolean | null;
    validation?: {
      minLength?: number | null;
      maxLength?: number | null;
      min?: number | null;
      max?: number | null;
      /**
       * Regular expression pattern
       */
      pattern?: string | null;
      /**
       * Custom validation error message
       */
      customError?: string | null;
    };
    options?:
      | {
          label: string;
          value: string;
          id?: string | null;
        }[]
      | null;
    defaultValue?: string | null;
    /**
     * Content for heading or paragraph
     */
    content?: string | null;
    width?: ('full' | 'half' | 'third' | 'two-thirds') | null;
    conditionalLogic?: {
      enabled?: boolean | null;
      showIf?: ('all' | 'any') | null;
      conditions?:
        | {
            /**
             * Field name to check
             */
            field?: string | null;
            operator?: ('equals' | 'not_equals' | 'contains' | 'is_empty' | 'is_not_empty') | null;
            value?: string | null;
            id?: string | null;
          }[]
        | null;
    };
    id?: string | null;
  }[];
  settings?: {
    submitButton?: {
      text?: string | null;
      style?: ('primary' | 'secondary' | 'outline') | null;
      position?: ('left' | 'center' | 'right') | null;
    };
    /**
     * Message shown after successful submission
     */
    successMessage?: string | null;
    /**
     * Message shown if submission fails
     */
    errorMessage?: string | null;
    /**
     * Optional URL to redirect to after submission
     */
    redirectUrl?: string | null;
    /**
     * Require user to be logged in to submit
     */
    requireLogin?: boolean | null;
    /**
     * Enable Google reCAPTCHA
     */
    enableRecaptcha?: boolean | null;
    /**
     * Save form submissions to database
     */
    saveSubmissions?: boolean | null;
    emailNotifications?: {
      enabled?: boolean | null;
      sendTo?:
        | {
            email: string;
            id?: string | null;
          }[]
        | null;
      subject?: string | null;
      /**
       * Field name containing email address for reply-to
       */
      replyTo?: string | null;
    };
    autoResponder?: {
      enabled?: boolean | null;
      /**
       * Field name containing recipient email
       */
      emailField?: string | null;
      subject?: string | null;
      /**
       * Email message. Use {{fieldname}} to include form values.
       */
      message?: string | null;
    };
  };
  style?: {
    layout?: ('stacked' | 'inline' | 'floating') | null;
    theme?: ('default' | 'minimal' | 'modern' | 'classic') | null;
    fieldSpacing?: ('compact' | 'medium' | 'large') | null;
    /**
     * Custom CSS for this form
     */
    customCSS?: string | null;
  };
  /**
   * Total number of submissions
   */
  submissions?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  /**
   * Form submission data
   */
  data:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status?: ('new' | 'read' | 'replied' | 'archived' | 'spam') | null;
  /**
   * Internal notes about this submission
   */
  notes?: string | null;
  submittedAt: string;
  /**
   * User who submitted (if logged in)
   */
  submittedBy?: (number | null) | User;
  ipAddress?: string | null;
  userAgent?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-components".
 */
export interface EmailComponent {
  id: number;
  /**
   * Component name (e.g., "Default Footer", "Holiday Header")
   */
  name: string;
  type: 'header' | 'footer' | 'signature' | 'cta' | 'other';
  /**
   * Component content - can include variables like {{companyAddress}}
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Plain text version for text-only emails
   */
  plainTextContent?: string | null;
  /**
   * Variables used in this component
   */
  variables?:
    | {
        key: string;
        description?: string | null;
        defaultValue?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-templates".
 */
export interface EmailTemplate {
  id: number;
  /**
   * Template name (e.g., "Welcome Email", "Order Confirmation")
   */
  name: string;
  /**
   * Unique key for programmatic access (e.g., "welcome-email")
   */
  key: string;
  /**
   * Email subject line - supports variables like {{userName}}
   */
  subject: string;
  /**
   * Preview text shown in email clients
   */
  previewText?: string | null;
  /**
   * Override default sender name
   */
  fromName?: string | null;
  /**
   * Override default sender email
   */
  fromEmail?: string | null;
  /**
   * Reply-to email address
   */
  replyTo?: string | null;
  header?: (number | null) | EmailComponent;
  /**
   * Email body content - supports variables and Handlebars syntax
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Plain text version for text-only email clients
   */
  plainTextContent?: string | null;
  footer?: (number | null) | EmailComponent;
  /**
   * Variables available in this template
   */
  variables?:
    | {
        key: string;
        description?: string | null;
        required?: boolean | null;
        defaultValue?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Test data for preview (JSON format)
   */
  testData?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Whether this template is active and can be used
   */
  active?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-sequences".
 */
export interface EmailSequence {
  id: number;
  /**
   * Sequence name (e.g., "New User Onboarding")
   */
  name: string;
  /**
   * Unique key for programmatic triggers (e.g., "user-onboarding")
   */
  key: string;
  /**
   * What this sequence does and when it triggers
   */
  description?: string | null;
  triggerEvent: 'user_registered' | 'first_purchase' | 'booking_created' | 'script_uploaded' | 'custom';
  emails: {
    template: number | EmailTemplate;
    /**
     * Delay before sending this email
     */
    delayValue: number;
    delayUnit: 'minutes' | 'hours' | 'days' | 'weeks';
    /**
     * Optional JS condition to evaluate before sending (return true to send)
     */
    condition?: string | null;
    id?: string | null;
  }[];
  /**
   * Whether this sequence is active
   */
  active?: boolean | null;
  /**
   * Stop sequence if user replies to any email
   */
  stopOnReply?: boolean | null;
  /**
   * Stop sequence if user unsubscribes
   */
  stopOnUnsubscribe?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-logs".
 */
export interface EmailLog {
  id: number;
  recipient: number | User;
  /**
   * Email address (denormalized for queries)
   */
  recipientEmail: string;
  template: number | EmailTemplate;
  /**
   * If sent as part of a sequence
   */
  sequence?: (number | null) | EmailSequence;
  /**
   * Position in sequence (0-based)
   */
  sequenceEmailIndex?: number | null;
  subject: string;
  status: 'pending' | 'sent' | 'delivered' | 'opened' | 'clicked' | 'bounced' | 'failed' | 'unsubscribed';
  sentAt?: string | null;
  deliveredAt?: string | null;
  openedAt?: string | null;
  clickedAt?: string | null;
  /**
   * Number of times email was opened
   */
  openCount?: number | null;
  /**
   * Number of clicks on links
   */
  clickCount?: number | null;
  /**
   * Resend API email ID
   */
  resendId?: string | null;
  /**
   * Error message if sending failed
   */
  error?: string | null;
  /**
   * Additional metadata from Resend webhooks
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-jobs".
 */
export interface EmailJob {
  id: number;
  recipient: number | User;
  template: number | EmailTemplate;
  /**
   * If part of a sequence
   */
  sequence?: (number | null) | EmailSequence;
  /**
   * Position in sequence
   */
  sequenceEmailIndex?: number | null;
  /**
   * When to send this email
   */
  scheduledFor: string;
  status: 'scheduled' | 'processing' | 'sent' | 'failed' | 'cancelled';
  /**
   * Variables to use when rendering template
   */
  variables?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Number of send attempts
   */
  attempts?: number | null;
  lastAttempt?: string | null;
  /**
   * Last error message
   */
  error?: string | null;
  /**
   * Created after successful send
   */
  emailLog?: (number | null) | EmailLog;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-campaigns".
 */
export interface EmailCampaign {
  id: number;
  /**
   * Campaign name for internal reference
   */
  name: string;
  /**
   * Email subject line - supports personalization like {{{first_name}}}
   */
  subject: string;
  /**
   * Preview text shown in email clients
   */
  previewText?: string | null;
  /**
   * Sender name
   */
  fromName?: string | null;
  /**
   * Sender email address
   */
  fromEmail?: string | null;
  /**
   * Reply-to email address
   */
  replyTo?: string | null;
  /**
   * Campaign content with visual editor
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Alternative markdown content for Resend
   */
  markdownContent?: string | null;
  contentType?: ('richtext' | 'markdown' | 'react') | null;
  /**
   * React Email component name
   */
  reactComponent?: string | null;
  /**
   * Target audience for this campaign
   */
  audience: number | EmailAudience;
  /**
   * Tags for organizing and filtering campaigns
   */
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  status?: ('draft' | 'scheduled' | 'sending' | 'sent' | 'cancelled') | null;
  /**
   * Schedule campaign for future sending
   */
  scheduledAt?: string | null;
  resendBroadcastId?: string | null;
  /**
   * Campaign performance metrics
   */
  analytics?: {
    sentCount?: number | null;
    deliveredCount?: number | null;
    openedCount?: number | null;
    clickedCount?: number | null;
    bouncedCount?: number | null;
    unsubscribedCount?: number | null;
    /**
     * Percentage of opens
     */
    openRate?: number | null;
    /**
     * Percentage of clicks
     */
    clickRate?: number | null;
  };
  /**
   * Send test emails before launching campaign
   */
  testEmails?:
    | {
        email: string;
        sentAt?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * A/B testing configuration
   */
  abTesting?: {
    enabled?: boolean | null;
    variants?:
      | {
          name: string;
          subject: string;
          percentage: number;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-audiences".
 */
export interface EmailAudience {
  id: number;
  /**
   * Audience name (e.g., "Newsletter Subscribers", "VIP Clients")
   */
  name: string;
  /**
   * Describe the purpose and criteria for this audience
   */
  description?: string | null;
  type: 'static' | 'dynamic' | 'all';
  /**
   * Resend Audience ID for syncing
   */
  resendAudienceId?: string | null;
  /**
   * Manually selected contacts for this audience
   */
  contacts?: (number | EmailContact)[] | null;
  /**
   * Dynamic segmentation rules
   */
  segmentRules?: {
    rules?:
      | {
          field: 'tags' | 'location' | 'engagement' | 'signupDate' | 'lastActivity' | 'custom';
          operator:
            | 'contains'
            | 'not_contains'
            | 'equals'
            | 'not_equals'
            | 'greater_than'
            | 'less_than'
            | 'is_empty'
            | 'is_not_empty';
          value?: string | null;
          /**
           * Custom field name
           */
          customField?: string | null;
          id?: string | null;
        }[]
      | null;
    logic?: ('all' | 'any') | null;
  };
  /**
   * Tags for organizing audiences
   */
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Number of contacts in this audience
   */
  contactCount?: number | null;
  /**
   * Whether this audience is active and can be used
   */
  active?: boolean | null;
  /**
   * Resend sync status
   */
  syncStatus?: {
    lastSyncedAt?: string | null;
    syncError?: string | null;
  };
  /**
   * Audience engagement statistics
   */
  statistics?: {
    /**
     * Average open rate percentage
     */
    avgOpenRate?: number | null;
    /**
     * Average click rate percentage
     */
    avgClickRate?: number | null;
    lastCampaignDate?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-contacts".
 */
export interface EmailContact {
  id: number;
  /**
   * Contact email address
   */
  email: string;
  /**
   * Contact first name
   */
  firstName?: string | null;
  /**
   * Contact last name
   */
  lastName?: string | null;
  /**
   * Resend Contact ID
   */
  resendContactId?: string | null;
  /**
   * Link to existing user account if applicable
   */
  user?: (number | null) | User;
  /**
   * Whether the contact is subscribed to emails
   */
  subscribed?: boolean | null;
  unsubscribedAt?: string | null;
  /**
   * Tags for segmentation and organization
   */
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Custom data fields for personalization
   */
  customFields?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  location?: {
    country?: string | null;
    state?: string | null;
    city?: string | null;
    /**
     * Timezone for optimal send times
     */
    timezone?: string | null;
  };
  /**
   * Email preferences
   */
  preferences?: {
    frequency?: ('all' | 'weekly' | 'monthly' | 'important') | null;
    /**
     * Subscribed email categories
     */
    categories?:
      | {
          category?: ('newsletter' | 'product' | 'promotions' | 'events' | 'educational') | null;
          id?: string | null;
        }[]
      | null;
  };
  /**
   * Engagement metrics
   */
  engagement?: {
    totalSent?: number | null;
    totalOpened?: number | null;
    totalClicked?: number | null;
    lastOpenedAt?: string | null;
    lastClickedAt?: string | null;
    /**
     * Calculated engagement score (0-100)
     */
    engagementScore?: number | null;
  };
  /**
   * Contact source information
   */
  source?: {
    type?: ('manual' | 'website' | 'api' | 'csv' | 'integration') | null;
    /**
     * Additional source details
     */
    detail?: string | null;
    signupDate?: string | null;
  };
  status?: ('active' | 'bounced' | 'complained' | 'suppressed') | null;
  /**
   * Internal notes about this contact
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Security event logs for monitoring and auditing
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "security-logs".
 */
export interface SecurityLog {
  id: number;
  type: 'auth_failure' | 'suspicious_activity' | 'rate_limit_exceeded' | 'invalid_input' | 'file_threat';
  severity: 'low' | 'medium' | 'high' | 'critical';
  /**
   * User ID associated with the event
   */
  userId?: string | null;
  /**
   * IP address of the request
   */
  ipAddress?: string | null;
  /**
   * User agent string
   */
  userAgent?: string | null;
  /**
   * Request path
   */
  path?: string | null;
  /**
   * HTTP method
   */
  method?: string | null;
  /**
   * Additional event details
   */
  details?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  timestamp: string;
  /**
   * Whether this security event has been reviewed and resolved
   */
  resolved?: boolean | null;
  /**
   * Admin who resolved this event
   */
  resolvedBy?: (number | null) | User;
  /**
   * When this event was resolved
   */
  resolvedAt?: string | null;
  /**
   * Admin notes about this event
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'cohorts';
        value: number | Cohort;
      } | null)
    | ({
        relationTo: 'voiceovers';
        value: number | Voiceover;
      } | null)
    | ({
        relationTo: 'bookings';
        value: number | Booking;
      } | null)
    | ({
        relationTo: 'scripts';
        value: number | Script;
      } | null)
    | ({
        relationTo: 'invoices';
        value: number | Invoice;
      } | null)
    | ({
        relationTo: 'blog-posts';
        value: number | BlogPost;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'email-components';
        value: number | EmailComponent;
      } | null)
    | ({
        relationTo: 'email-templates';
        value: number | EmailTemplate;
      } | null)
    | ({
        relationTo: 'email-sequences';
        value: number | EmailSequence;
      } | null)
    | ({
        relationTo: 'email-logs';
        value: number | EmailLog;
      } | null)
    | ({
        relationTo: 'email-jobs';
        value: number | EmailJob;
      } | null)
    | ({
        relationTo: 'email-campaigns';
        value: number | EmailCampaign;
      } | null)
    | ({
        relationTo: 'email-audiences';
        value: number | EmailAudience;
      } | null)
    | ({
        relationTo: 'email-contacts';
        value: number | EmailContact;
      } | null)
    | ({
        relationTo: 'security-logs';
        value: number | SecurityLog;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  avatar?: T;
  avatarURL?: T;
  avatarColor?: T;
  status?: T;
  role?: T;
  department?: T;
  jobTitle?: T;
  phone?: T;
  bio?: T;
  timezone?: T;
  socialLinks?:
    | T
    | {
        linkedin?: T;
        twitter?: T;
        github?: T;
        website?: T;
      };
  preferredLanguage?: T;
  emailPreferences?:
    | T
    | {
        unsubscribed?: T;
        marketing?: T;
        transactional?: T;
        updates?: T;
      };
  security?:
    | T
    | {
        lastLogin?: T;
        loginCount?: T;
        twoFactorEnabled?: T;
        passwordChangedAt?: T;
        loginHistory?:
          | T
          | {
              timestamp?: T;
              ipAddress?: T;
              userAgent?: T;
              success?: T;
              id?: T;
            };
      };
  lastLogin?: T;
  notifications?:
    | T
    | {
        inApp?: T;
        push?: T;
        sms?: T;
      };
  metadata?:
    | T
    | {
        tags?:
          | T
          | {
              tag?: T;
              id?: T;
            };
        notes?: T;
        customFields?: T;
        createdBy?: T;
        updatedBy?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  uploadedBy?: T;
  scanStatus?: T;
  scanDetails?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cohorts_select".
 */
export interface CohortsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  color?: T;
  description?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "voiceovers_select".
 */
export interface VoiceoversSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  profilePhoto?: T;
  additionalPhotos?:
    | T
    | {
        photo?: T;
        caption?: T;
        id?: T;
      };
  styleTags?:
    | T
    | {
        tag?: T;
        customTag?: T;
        id?: T;
      };
  fullDemoReel?: T;
  commercialsDemo?: T;
  narrativeDemo?: T;
  status?: T;
  cohort?: T;
  availability?:
    | T
    | {
        isAvailable?: T;
        unavailableFrom?: T;
        unavailableUntil?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookings_select".
 */
export interface BookingsSelect<T extends boolean = true> {
  title?: T;
  customer?: T;
  voiceover?: T;
  status?: T;
  projectType?: T;
  deadline?: T;
  budget?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "scripts_select".
 */
export interface ScriptsSelect<T extends boolean = true> {
  title?: T;
  uploadedBy?: T;
  assignedVoiceover?: T;
  scriptType?: T;
  language?: T;
  wordCount?: T;
  estimatedDuration?: T;
  confidentialityLevel?: T;
  instructions?: T;
  originalFilename?: T;
  deadline?: T;
  accessLog?:
    | T
    | {
        accessedBy?: T;
        accessedAt?: T;
        action?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "invoices_select".
 */
export interface InvoicesSelect<T extends boolean = true> {
  invoiceNumber?: T;
  client?: T;
  provider?: T;
  status?: T;
  amount?: T;
  currency?: T;
  issueDate?: T;
  dueDate?: T;
  paidDate?: T;
  notes?: T;
  accessLog?:
    | T
    | {
        accessedBy?: T;
        accessedAt?: T;
        action?: T;
        id?: T;
      };
  originalFilename?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-posts_select".
 */
export interface BlogPostsSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  slug?: T;
  bannerImage?: T;
  content?: T;
  excerpt?: T;
  meta?: T | MetaSelect<T>;
  openGraph?:
    | T
    | {
        title?: T;
        description?: T;
        type?: T;
      };
  author?: T;
  categories?:
    | T
    | {
        category?: T;
        id?: T;
      };
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  status?: T;
  publishedDate?: T;
  featured?: T;
  enableComments?: T;
  views?: T;
  readingTime?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Meta_select".
 */
export interface MetaSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  keywords?:
    | T
    | {
        keyword?: T;
        id?: T;
      };
  image?: T;
  noIndex?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  hero?:
    | T
    | {
        type?: T;
        title?: T;
        subtitle?: T;
        image?: T;
        videoUrl?: T;
        cta?:
          | T
          | {
              text?: T;
              link?: T;
              style?: T;
            };
      };
  content?: T;
  sections?:
    | T
    | {
        type?: T;
        richTextContent?: T;
        leftColumn?: T;
        rightColumn?: T;
        columnRatio?: T;
        ctaHeading?: T;
        ctaText?: T;
        ctaButtons?:
          | T
          | {
              text?: T;
              link?: T;
              style?: T;
              id?: T;
            };
        ctaBackgroundColor?: T;
        contactHeading?: T;
        contactSubheading?: T;
        showContactForm?: T;
        contactEmail?: T;
        contactPhone?: T;
        pricingHeading?: T;
        pricingSubheading?: T;
        pricingPlans?:
          | T
          | {
              name?: T;
              price?: T;
              description?: T;
              features?:
                | T
                | {
                    feature?: T;
                    id?: T;
                  };
              highlighted?: T;
              buttonText?: T;
              buttonLink?: T;
              id?: T;
            };
        testimonialsHeading?: T;
        testimonialsSubheading?: T;
        testimonialsSource?: T;
        selectedTestimonials?: T;
        testimonialsLimit?: T;
        faqHeading?: T;
        faqSubheading?: T;
        faqs?:
          | T
          | {
              question?: T;
              answer?: T;
              id?: T;
            };
        galleryHeading?: T;
        galleryImages?: T;
        galleryLayout?: T;
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?:
          | T
          | {
              keyword?: T;
              id?: T;
            };
        image?: T;
        noIndex?: T;
      };
  openGraph?:
    | T
    | {
        title?: T;
        description?: T;
        type?: T;
      };
  parent?: T;
  status?: T;
  publishedDate?: T;
  showInNav?: T;
  navOrder?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  status?: T;
  fields?:
    | T
    | {
        fieldType?: T;
        name?: T;
        label?: T;
        placeholder?: T;
        helpText?: T;
        required?: T;
        validation?:
          | T
          | {
              minLength?: T;
              maxLength?: T;
              min?: T;
              max?: T;
              pattern?: T;
              customError?: T;
            };
        options?:
          | T
          | {
              label?: T;
              value?: T;
              id?: T;
            };
        defaultValue?: T;
        content?: T;
        width?: T;
        conditionalLogic?:
          | T
          | {
              enabled?: T;
              showIf?: T;
              conditions?:
                | T
                | {
                    field?: T;
                    operator?: T;
                    value?: T;
                    id?: T;
                  };
            };
        id?: T;
      };
  settings?:
    | T
    | {
        submitButton?:
          | T
          | {
              text?: T;
              style?: T;
              position?: T;
            };
        successMessage?: T;
        errorMessage?: T;
        redirectUrl?: T;
        requireLogin?: T;
        enableRecaptcha?: T;
        saveSubmissions?: T;
        emailNotifications?:
          | T
          | {
              enabled?: T;
              sendTo?:
                | T
                | {
                    email?: T;
                    id?: T;
                  };
              subject?: T;
              replyTo?: T;
            };
        autoResponder?:
          | T
          | {
              enabled?: T;
              emailField?: T;
              subject?: T;
              message?: T;
            };
      };
  style?:
    | T
    | {
        layout?: T;
        theme?: T;
        fieldSpacing?: T;
        customCSS?: T;
      };
  submissions?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  data?: T;
  status?: T;
  notes?: T;
  submittedAt?: T;
  submittedBy?: T;
  ipAddress?: T;
  userAgent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  name?: T;
  title?: T;
  company?: T;
  avatar?: T;
  testimonial?: T;
  rating?: T;
  featured?: T;
  publishedDate?: T;
  media?:
    | T
    | {
        type?: T;
        videoUrl?: T;
        videoThumbnail?: T;
        audioFile?: T;
        duration?: T;
      };
  project?:
    | T
    | {
        voiceover?: T;
        projectType?: T;
        projectName?: T;
        completedDate?: T;
      };
  display?:
    | T
    | {
        showCompany?: T;
        showTitle?: T;
        showAvatar?: T;
        showRating?: T;
        highlightText?: T;
        tags?:
          | T
          | {
              tag?: T;
              id?: T;
            };
      };
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-components_select".
 */
export interface EmailComponentsSelect<T extends boolean = true> {
  name?: T;
  type?: T;
  content?: T;
  plainTextContent?: T;
  variables?:
    | T
    | {
        key?: T;
        description?: T;
        defaultValue?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-templates_select".
 */
export interface EmailTemplatesSelect<T extends boolean = true> {
  name?: T;
  key?: T;
  subject?: T;
  previewText?: T;
  fromName?: T;
  fromEmail?: T;
  replyTo?: T;
  header?: T;
  content?: T;
  plainTextContent?: T;
  footer?: T;
  variables?:
    | T
    | {
        key?: T;
        description?: T;
        required?: T;
        defaultValue?: T;
        id?: T;
      };
  testData?: T;
  active?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-sequences_select".
 */
export interface EmailSequencesSelect<T extends boolean = true> {
  name?: T;
  key?: T;
  description?: T;
  triggerEvent?: T;
  emails?:
    | T
    | {
        template?: T;
        delayValue?: T;
        delayUnit?: T;
        condition?: T;
        id?: T;
      };
  active?: T;
  stopOnReply?: T;
  stopOnUnsubscribe?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-logs_select".
 */
export interface EmailLogsSelect<T extends boolean = true> {
  recipient?: T;
  recipientEmail?: T;
  template?: T;
  sequence?: T;
  sequenceEmailIndex?: T;
  subject?: T;
  status?: T;
  sentAt?: T;
  deliveredAt?: T;
  openedAt?: T;
  clickedAt?: T;
  openCount?: T;
  clickCount?: T;
  resendId?: T;
  error?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-jobs_select".
 */
export interface EmailJobsSelect<T extends boolean = true> {
  recipient?: T;
  template?: T;
  sequence?: T;
  sequenceEmailIndex?: T;
  scheduledFor?: T;
  status?: T;
  variables?: T;
  attempts?: T;
  lastAttempt?: T;
  error?: T;
  emailLog?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-campaigns_select".
 */
export interface EmailCampaignsSelect<T extends boolean = true> {
  name?: T;
  subject?: T;
  previewText?: T;
  fromName?: T;
  fromEmail?: T;
  replyTo?: T;
  content?: T;
  markdownContent?: T;
  contentType?: T;
  reactComponent?: T;
  audience?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  status?: T;
  scheduledAt?: T;
  resendBroadcastId?: T;
  analytics?:
    | T
    | {
        sentCount?: T;
        deliveredCount?: T;
        openedCount?: T;
        clickedCount?: T;
        bouncedCount?: T;
        unsubscribedCount?: T;
        openRate?: T;
        clickRate?: T;
      };
  testEmails?:
    | T
    | {
        email?: T;
        sentAt?: T;
        id?: T;
      };
  abTesting?:
    | T
    | {
        enabled?: T;
        variants?:
          | T
          | {
              name?: T;
              subject?: T;
              percentage?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-audiences_select".
 */
export interface EmailAudiencesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  type?: T;
  resendAudienceId?: T;
  contacts?: T;
  segmentRules?:
    | T
    | {
        rules?:
          | T
          | {
              field?: T;
              operator?: T;
              value?: T;
              customField?: T;
              id?: T;
            };
        logic?: T;
      };
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  contactCount?: T;
  active?: T;
  syncStatus?:
    | T
    | {
        lastSyncedAt?: T;
        syncError?: T;
      };
  statistics?:
    | T
    | {
        avgOpenRate?: T;
        avgClickRate?: T;
        lastCampaignDate?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-contacts_select".
 */
export interface EmailContactsSelect<T extends boolean = true> {
  email?: T;
  firstName?: T;
  lastName?: T;
  resendContactId?: T;
  user?: T;
  subscribed?: T;
  unsubscribedAt?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  customFields?: T;
  location?:
    | T
    | {
        country?: T;
        state?: T;
        city?: T;
        timezone?: T;
      };
  preferences?:
    | T
    | {
        frequency?: T;
        categories?:
          | T
          | {
              category?: T;
              id?: T;
            };
      };
  engagement?:
    | T
    | {
        totalSent?: T;
        totalOpened?: T;
        totalClicked?: T;
        lastOpenedAt?: T;
        lastClickedAt?: T;
        engagementScore?: T;
      };
  source?:
    | T
    | {
        type?: T;
        detail?: T;
        signupDate?: T;
      };
  status?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "security-logs_select".
 */
export interface SecurityLogsSelect<T extends boolean = true> {
  type?: T;
  severity?: T;
  userId?: T;
  ipAddress?: T;
  userAgent?: T;
  path?: T;
  method?: T;
  details?: T;
  timestamp?: T;
  resolved?: T;
  resolvedBy?: T;
  resolvedAt?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-settings".
 */
export interface EmailSetting {
  id: number;
  /**
   * Default sender name for emails
   */
  defaultFromName: string;
  /**
   * Default sender email address
   */
  defaultFromEmail: string;
  /**
   * Default reply-to email address
   */
  defaultReplyTo?: string | null;
  /**
   * Email address to send test emails to (defaults to admin email)
   */
  testEmailRecipient?: string | null;
  companyName?: string | null;
  /**
   * Company address for email footers
   */
  companyAddress?: string | null;
  companyWebsite?: string | null;
  companyPhone?: string | null;
  companySocial?: {
    /**
     * Twitter/X handle (without @)
     */
    twitter?: string | null;
    /**
     * LinkedIn company page URL
     */
    linkedin?: string | null;
    /**
     * Facebook page URL
     */
    facebook?: string | null;
  };
  /**
   * URL for unsubscribe page
   */
  unsubscribeUrl?: string | null;
  unsubscribeText?: string | null;
  /**
   * Number of emails to process per batch
   */
  batchSize?: number | null;
  /**
   * Number of retry attempts for failed emails
   */
  retryAttempts?: number | null;
  /**
   * Delay in seconds between retry attempts
   */
  retryDelay?: number | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings".
 */
export interface SiteSetting {
  id: number;
  /**
   * The name of your website
   */
  siteName: string;
  /**
   * A short tagline or description
   */
  tagline?: string | null;
  /**
   * Site logo for header
   */
  logo?: (number | null) | Media;
  /**
   * Upload a custom favicon (recommended: 32x32px SVG or PNG). If no favicon is uploaded, a default dark "14" icon will be used.
   */
  favicon?: (number | null) | Media;
  /**
   * Full site URL (e.g., https://14voices.com)
   */
  siteUrl: string;
  language?: ('en' | 'es' | 'fr' | 'de') | null;
  contact?: {
    /**
     * Primary contact email
     */
    email?: string | null;
    /**
     * Primary contact phone
     */
    phone?: string | null;
    address?: {
      street?: string | null;
      city?: string | null;
      state?: string | null;
      zip?: string | null;
      country?: string | null;
    };
    /**
     * Business hours (one per line)
     */
    hours?: string | null;
  };
  socialLinks?: {
    /**
     * Facebook page URL
     */
    facebook?: string | null;
    /**
     * Twitter/X profile URL
     */
    twitter?: string | null;
    /**
     * Instagram profile URL
     */
    instagram?: string | null;
    /**
     * LinkedIn profile URL
     */
    linkedin?: string | null;
    /**
     * YouTube channel URL
     */
    youtube?: string | null;
    /**
     * TikTok profile URL
     */
    tiktok?: string | null;
  };
  defaultSeo?: {
    /**
     * Default page title template (e.g., %s | 14voices)
     */
    title?: string | null;
    /**
     * Default meta description
     */
    description?: string | null;
    /**
     * Default keywords
     */
    keywords?:
      | {
          keyword?: string | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Default social sharing image
     */
    image?: (number | null) | Media;
  };
  openGraph?: {
    /**
     * OG site name
     */
    siteName?: string | null;
    type?: ('website' | 'article') | null;
  };
  twitterCard?: {
    cardType?: ('summary' | 'summary_large_image') | null;
    /**
     * Twitter handle (e.g., @14voices)
     */
    handle?: string | null;
  };
  analytics?: {
    /**
     * Google Analytics 4 Measurement ID (e.g., G-XXXXXXXXXX)
     */
    googleAnalyticsId?: string | null;
    /**
     * Google Tag Manager ID (e.g., GTM-XXXXXX)
     */
    googleTagManagerId?: string | null;
    /**
     * Facebook Pixel ID
     */
    facebookPixelId?: string | null;
    customScripts?: {
      /**
       * Scripts to inject in <head>
       */
      headScripts?: string | null;
      /**
       * Scripts to inject before </body>
       */
      bodyScripts?: string | null;
    };
  };
  banner?: {
    /**
     * Show the announcement banner at the top of the site
     */
    enabled?: boolean | null;
    /**
     * Banner message (use **text** for bold/italic styling)
     */
    message?: string | null;
    /**
     * Type of link for the banner
     */
    linkType?: ('none' | 'custom' | 'page') | null;
    /**
     * Custom URL for the banner link
     */
    linkUrl?: string | null;
    /**
     * Internal page to link to
     */
    linkPage?: (number | null) | Page;
    /**
     * Allow users to dismiss the banner
     */
    dismissible?: boolean | null;
    /**
     * Visual style of the banner
     */
    style?: ('gradient' | 'solid' | 'subtle') | null;
  };
  features?: {
    /**
     * ⚠️ WARNING: Disabling this will remove search functionality from your entire website. Visitors will not be able to search for content.
     */
    enableSearch?: boolean | null;
    /**
     * ⚠️ WARNING: Disabling this will hide all blog posts and the blog section from your website. This affects SEO and content visibility.
     */
    enableBlog?: boolean | null;
    maintenanceMode?: boolean | null;
    /**
     * Main heading for the maintenance page
     */
    maintenanceTitle?: string | null;
    /**
     * Main message to show during maintenance
     */
    maintenanceMessage?: string | null;
    /**
     * Label above contact email
     */
    maintenanceContactLabel?: string | null;
    showContactEmail?: boolean | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-settings_select".
 */
export interface EmailSettingsSelect<T extends boolean = true> {
  defaultFromName?: T;
  defaultFromEmail?: T;
  defaultReplyTo?: T;
  testEmailRecipient?: T;
  companyName?: T;
  companyAddress?: T;
  companyWebsite?: T;
  companyPhone?: T;
  companySocial?:
    | T
    | {
        twitter?: T;
        linkedin?: T;
        facebook?: T;
      };
  unsubscribeUrl?: T;
  unsubscribeText?: T;
  batchSize?: T;
  retryAttempts?: T;
  retryDelay?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  siteName?: T;
  tagline?: T;
  logo?: T;
  favicon?: T;
  siteUrl?: T;
  language?: T;
  contact?:
    | T
    | {
        email?: T;
        phone?: T;
        address?:
          | T
          | {
              street?: T;
              city?: T;
              state?: T;
              zip?: T;
              country?: T;
            };
        hours?: T;
      };
  socialLinks?:
    | T
    | {
        facebook?: T;
        twitter?: T;
        instagram?: T;
        linkedin?: T;
        youtube?: T;
        tiktok?: T;
      };
  defaultSeo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?:
          | T
          | {
              keyword?: T;
              id?: T;
            };
        image?: T;
      };
  openGraph?:
    | T
    | {
        siteName?: T;
        type?: T;
      };
  twitterCard?:
    | T
    | {
        cardType?: T;
        handle?: T;
      };
  analytics?:
    | T
    | {
        googleAnalyticsId?: T;
        googleTagManagerId?: T;
        facebookPixelId?: T;
        customScripts?:
          | T
          | {
              headScripts?: T;
              bodyScripts?: T;
            };
      };
  banner?:
    | T
    | {
        enabled?: T;
        message?: T;
        linkType?: T;
        linkUrl?: T;
        linkPage?: T;
        dismissible?: T;
        style?: T;
      };
  features?:
    | T
    | {
        enableSearch?: T;
        enableBlog?: T;
        maintenanceMode?: T;
        maintenanceTitle?: T;
        maintenanceMessage?: T;
        maintenanceContactLabel?: T;
        showContactEmail?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}