/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    groups: Group;
    voiceovers: Voiceover;
    bookings: Booking;
    scripts: Script;
    invoices: Invoice;
    'blog-posts': BlogPost;
    pages: Page;
    forms: Form;
    'form-submissions': FormSubmission;
    testimonials: Testimonial;
    faq: Faq;
    'email-components': EmailComponent;
    'email-templates': EmailTemplate;
    'email-sequences': EmailSequence;
    'email-logs': EmailLog;
    'email-jobs': EmailJob;
    'email-campaigns': EmailCampaign;
    'email-audiences': EmailAudience;
    'email-contacts': EmailContact;
    'security-logs': SecurityLog;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    groups: GroupsSelect<false> | GroupsSelect<true>;
    voiceovers: VoiceoversSelect<false> | VoiceoversSelect<true>;
    bookings: BookingsSelect<false> | BookingsSelect<true>;
    scripts: ScriptsSelect<false> | ScriptsSelect<true>;
    invoices: InvoicesSelect<false> | InvoicesSelect<true>;
    'blog-posts': BlogPostsSelect<false> | BlogPostsSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    faq: FaqSelect<false> | FaqSelect<true>;
    'email-components': EmailComponentsSelect<false> | EmailComponentsSelect<true>;
    'email-templates': EmailTemplatesSelect<false> | EmailTemplatesSelect<true>;
    'email-sequences': EmailSequencesSelect<false> | EmailSequencesSelect<true>;
    'email-logs': EmailLogsSelect<false> | EmailLogsSelect<true>;
    'email-jobs': EmailJobsSelect<false> | EmailJobsSelect<true>;
    'email-campaigns': EmailCampaignsSelect<false> | EmailCampaignsSelect<true>;
    'email-audiences': EmailAudiencesSelect<false> | EmailAudiencesSelect<true>;
    'email-contacts': EmailContactsSelect<false> | EmailContactsSelect<true>;
    'security-logs': SecurityLogsSelect<false> | SecurityLogsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'email-settings': EmailSetting;
    'faq-settings': FaqSetting;
    'site-settings': SiteSetting;
  };
  globalsSelect: {
    'email-settings': EmailSettingsSelect<false> | EmailSettingsSelect<true>;
    'faq-settings': FaqSettingsSelect<false> | FaqSettingsSelect<true>;
    'site-settings': SiteSettingsSelect<false> | SiteSettingsSelect<true>;
  };
  locale: 'nl' | 'en';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  /**
   * Upload a custom profile photo
   */
  avatar?: (number | null) | Media;
  avatarURL?: string | null;
  /**
   * Color for default avatar when no image is uploaded
   */
  avatarColor?: string | null;
  role: 'admin' | 'editor' | 'user';
  jobTitle?: string | null;
  phone?: string | null;
  /**
   * Short bio about yourself
   */
  bio?: string | null;
  /**
   * Social media profiles
   */
  socialLinks?: {
    linkedin?: string | null;
    instagram?: string | null;
  };
  /**
   * Last login time
   */
  lastLogin?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  /**
   * Alternative text for images (required for accessibility)
   */
  alt: string;
  /**
   * Optional caption for media files
   */
  caption?: string | null;
  uploadedBy?: (number | null) | User;
  scanStatus?: ('pending' | 'safe' | 'suspicious' | 'blocked') | null;
  scanDetails?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "groups".
 */
export interface Group {
  id: number;
  /**
   * Name of the cohort (e.g., "November 2025", "Summer Voices")
   */
  name: string;
  /**
   * URL-friendly version (e.g., "nov-2025")
   */
  slug: string;
  /**
   * Optional description of this cohort
   */
  description?: string | null;
  /**
   * Whether this cohort is currently active
   */
  isActive?: boolean | null;
  voiceoverCount?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "voiceovers".
 */
export interface Voiceover {
  id: number;
  /**
   * Only the first name of the voiceover
   */
  name: string;
  /**
   * Every voiceover has its own page and this the URL that will be automatically generated based on the first name of the voiceover. E.g. 'peter' becomes 14voices.com/peter
   */
  slug: string;
  /**
   * Optional bio shown on the voiceover's page
   */
  description?: string | null;
  /**
   * Profile photo of the voiceover
   */
  profilePhoto?: (number | null) | Media;
  /**
   * Additional profile photos
   */
  additionalPhotos?:
    | {
        photo: number | Media;
        /**
         * Optional caption for this photo
         */
        caption?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Select at least 3 style tags
   */
  styleTags: {
    tag:
      | 'autoriteit'
      | 'jeugdig-fris'
      | 'kwaliteit'
      | 'stoer'
      | 'warm-donker'
      | 'zakelijk'
      | 'eigentijds'
      | 'gezellig-genieten'
      | 'helder'
      | 'naturel'
      | 'urban'
      | 'vernieuwend'
      | 'vriendelijk-vrolijk'
      | 'custom';
    /**
     * Enter your custom tag
     */
    customTag?: string | null;
    id?: string | null;
  }[];
  /**
   * Full demo reel audio file
   */
  fullDemoReel?: (number | null) | Media;
  /**
   * Commercials demo audio file
   */
  commercialsDemo?: (number | null) | Media;
  /**
   * Narrative demo audio file
   */
  narrativeDemo?: (number | null) | Media;
  /**
   * Controls where this voiceover appears on the website. More Voices (uit het archief) = Deze voiceover wordt getoond in de 'uit het archief' sectie onder de 14 stemmen die in het groot worden getoond
   */
  status: 'active' | 'draft' | 'more-voices' | 'archived';
  /**
   * The group/cohort this voiceover belongs to
   */
  group: number | Group;
  availability?: {
    /**
     * Is this voiceover currently available for bookings?
     */
    isAvailable?: boolean | null;
    /**
     * Start date of unavailability (e.g., vacation start)
     */
    unavailableFrom?: string | null;
    /**
     * End date of unavailability (auto-reactivates after this date)
     */
    unavailableUntil?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookings".
 */
export interface Booking {
  id: number;
  /**
   * Brief description of the booking
   */
  title: string;
  /**
   * Customer who created the booking
   */
  customer: number | User;
  /**
   * Assigned voiceover artist
   */
  voiceover?: (number | null) | Voiceover;
  status: 'pending' | 'confirmed' | 'in_progress' | 'completed' | 'cancelled';
  projectType: 'commercial' | 'narration' | 'elearning' | 'corporate' | 'other';
  deadline?: string | null;
  /**
   * Budget in USD
   */
  budget?: number | null;
  /**
   * Additional notes or requirements
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Scripts uploaded by clients for voiceover work
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "scripts".
 */
export interface Script {
  id: number;
  /**
   * Title of the script or project
   */
  title: string;
  /**
   * Client who uploaded the script
   */
  uploadedBy?: (number | null) | User;
  /**
   * Voiceover artist assigned to read this script
   */
  assignedVoiceover?: (number | null) | Voiceover;
  scriptType:
    | 'commercial'
    | 'narration'
    | 'elearning'
    | 'audiobook'
    | 'videogame'
    | 'animation'
    | 'corporate'
    | 'other';
  language: 'en' | 'es' | 'fr' | 'de' | 'it' | 'pt' | 'nl' | 'other';
  /**
   * Estimated word count (auto-calculated when possible)
   */
  wordCount?: number | null;
  /**
   * Estimated reading duration in minutes
   */
  estimatedDuration?: number | null;
  /**
   * Security level of the script content
   */
  confidentialityLevel: 'public' | 'standard' | 'confidential' | 'highly-confidential';
  /**
   * Special instructions for the voiceover artist
   */
  instructions?: string | null;
  /**
   * Original filename before security hashing
   */
  originalFilename?: string | null;
  /**
   * When the script reading needs to be completed
   */
  deadline?: string | null;
  /**
   * Audit log of who accessed this script
   */
  accessLog?:
    | {
        accessedBy: number | User;
        accessedAt: string;
        action: 'viewed' | 'downloaded';
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * Invoice documents with restricted access
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "invoices".
 */
export interface Invoice {
  id: number;
  /**
   * Unique invoice number (e.g., INV-2024-001)
   */
  invoiceNumber: string;
  /**
   * Client who receives the invoice
   */
  client: number | User;
  /**
   * Service provider (voiceover artist)
   */
  provider: number | User;
  status: 'draft' | 'sent' | 'viewed' | 'paid' | 'overdue' | 'cancelled';
  /**
   * Invoice amount in cents
   */
  amount: number;
  currency: 'USD' | 'EUR' | 'GBP' | 'CAD' | 'AUD';
  issueDate: string;
  dueDate: string;
  paidDate?: string | null;
  /**
   * Internal notes (not shown on invoice)
   */
  notes?: string | null;
  /**
   * Audit trail of invoice access
   */
  accessLog?:
    | {
        accessedBy: number | User;
        accessedAt: string;
        action: 'viewed' | 'downloaded' | 'sent';
        id?: string | null;
      }[]
    | null;
  /**
   * Original filename
   */
  originalFilename?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-posts".
 */
export interface BlogPost {
  id: number;
  /**
   * The main title of your blog post
   */
  title: string;
  /**
   * Optional subtitle or tagline
   */
  subtitle?: string | null;
  /**
   * URL-friendly version of the title
   */
  slug?: string | null;
  /**
   * Hero image displayed at the top of the post
   */
  bannerImage: number | Media;
  /**
   * The main content of your blog post
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Short summary for previews and listings (auto-generated if empty)
   */
  excerpt?: string | null;
  meta?: Meta;
  openGraph?: {
    /**
     * OG title for social sharing
     */
    title?: string | null;
    /**
     * OG description for social sharing
     */
    description?: string | null;
    type?: ('article' | 'website') | null;
  };
  /**
   * The author of this post
   */
  author: number | User;
  /**
   * Organize posts by categories
   */
  categories?:
    | {
        category?:
          | ('news' | 'tips-tricks' | 'behind-scenes' | 'industry-insights' | 'voice-acting' | 'technology')
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Add tags for better discoverability
   */
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Post visibility status
   */
  status: 'draft' | 'published' | 'archived';
  /**
   * Schedule post publication
   */
  publishedDate?: string | null;
  /**
   * Feature this post on the homepage
   */
  featured?: boolean | null;
  /**
   * Allow comments on this post
   */
  enableComments?: boolean | null;
  /**
   * Number of times this post has been viewed
   */
  views?: number | null;
  /**
   * Estimated reading time in minutes
   */
  readingTime?: number | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Meta".
 */
export interface Meta {
  /**
   * Override the default title for SEO (defaults to post title)
   */
  title?: string | null;
  /**
   * Meta description for search engines (defaults to excerpt)
   */
  description?: string | null;
  /**
   * SEO keywords for this post
   */
  keywords?:
    | {
        keyword?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Social media preview image (defaults to banner image)
   */
  image?: (number | null) | Media;
  /**
   * Prevent search engines from indexing this page
   */
  noIndex?: boolean | null;
}
/**
 * Manage site pages. Note: The home page cannot be deleted.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  /**
   * Page title displayed in browser tabs and search results
   */
  title: string;
  /**
   * URL path for this page (e.g., "about-us")
   */
  slug: string;
  hero?: {
    type?: ('none' | 'simple' | 'image' | 'video' | 'gradient' | 'homepage') | null;
    /**
     * The small process steps displayed at the top of the hero
     */
    processSteps?:
      | {
          /**
           * Text for this step (e.g., "1. Kies de stem")
           */
          text: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Hero title text
     */
    title?: string | null;
    subtitle?: string | null;
    /**
     * Hero description text
     */
    description?: string | null;
    image?: (number | null) | Media;
    /**
     * Main image displayed in the oval-shaped container on the right (recommended: high-quality portrait photo, minimum 400x500px)
     */
    heroImage?: (number | null) | Media;
    /**
     * YouTube or Vimeo URL
     */
    videoUrl?: string | null;
    primaryButton?: {
      /**
       * Text for the primary call-to-action button
       */
      text: string;
      /**
       * URL for the primary button (e.g., #voiceovers, /voiceovers)
       */
      url: string;
    };
    secondaryButton?: {
      /**
       * Text for the secondary button
       */
      text: string;
      /**
       * URL for the secondary button
       */
      url: string;
    };
    cta?: {
      text?: string | null;
      link?: string | null;
      style?: ('primary' | 'secondary' | 'outline') | null;
    };
    /**
     * Statistics displayed below the buttons
     */
    stats?:
      | {
          /**
           * The statistic number/value (e.g., "14", "<48u", "9.1/10")
           */
          number: string;
          /**
           * The statistic label (e.g., "Stemacteurs", "Snelle levering")
           */
          label: string;
          id?: string | null;
        }[]
      | null;
  };
  /**
   * Main page content
   */
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Add content sections to build your page
   */
  sections?:
    | {
        type: 'richText' | 'twoColumn' | 'cta' | 'contact' | 'pricing' | 'testimonials' | 'faq' | 'gallery';
        richTextContent?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        leftColumn?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        rightColumn?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        columnRatio?: ('50-50' | '60-40' | '40-60' | '70-30' | '30-70') | null;
        ctaHeading?: string | null;
        ctaText?: string | null;
        ctaButtons?:
          | {
              text: string;
              link: string;
              style?: ('primary' | 'secondary' | 'outline') | null;
              id?: string | null;
            }[]
          | null;
        ctaBackgroundColor?: ('white' | 'gray' | 'primary' | 'dark') | null;
        contactHeading?: string | null;
        contactSubheading?: string | null;
        showContactForm?: boolean | null;
        contactEmail?: string | null;
        contactPhone?: string | null;
        pricingHeading?: string | null;
        pricingSubheading?: string | null;
        pricingPlans?:
          | {
              name: string;
              price: string;
              description?: string | null;
              features?:
                | {
                    feature: string;
                    id?: string | null;
                  }[]
                | null;
              highlighted?: boolean | null;
              buttonText?: string | null;
              buttonLink?: string | null;
              id?: string | null;
            }[]
          | null;
        testimonialsHeading?: string | null;
        testimonialsSubheading?: string | null;
        testimonialsSource?: ('featured' | 'latest' | 'selected') | null;
        selectedTestimonials?: (number | Testimonial)[] | null;
        testimonialsLimit?: number | null;
        faqHeading?: string | null;
        faqSubheading?: string | null;
        faqs?:
          | {
              question: string;
              answer: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              id?: string | null;
            }[]
          | null;
        galleryHeading?: string | null;
        galleryImages?: (number | Media)[] | null;
        galleryLayout?: ('grid' | 'masonry' | 'carousel') | null;
        id?: string | null;
      }[]
    | null;
  meta?: {
    /**
     * Override page title for SEO (60 chars max)
     */
    title?: string | null;
    /**
     * Meta description for search engines (160 chars max)
     */
    description?: string | null;
    /**
     * SEO keywords for this page
     */
    keywords?:
      | {
          keyword?: string | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Social media preview image
     */
    image?: (number | null) | Media;
    /**
     * Prevent search engines from indexing this page
     */
    noIndex?: boolean | null;
  };
  openGraph?: {
    /**
     * OG title for social sharing
     */
    title?: string | null;
    /**
     * OG description for social sharing
     */
    description?: string | null;
    type?: ('website' | 'article') | null;
  };
  /**
   * Set a parent page to create a hierarchy
   */
  parent?: (number | null) | Page;
  /**
   * Page visibility status
   */
  status: 'draft' | 'published' | 'archived';
  /**
   * Schedule page publication
   */
  publishedDate?: string | null;
  /**
   * Include in navigation menus
   */
  showInNav?: boolean | null;
  /**
   * Order in navigation (lower numbers appear first)
   */
  navOrder?: number | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  /**
   * Client name
   */
  name: string;
  /**
   * Job title or role
   */
  title?: string | null;
  /**
   * Company name
   */
  company?: string | null;
  /**
   * Client photo or avatar
   */
  avatar?: (number | null) | Media;
  /**
   * The testimonial text
   */
  testimonial: string;
  /**
   * Star rating
   */
  rating?: ('5' | '4' | '3' | '2' | '1') | null;
  /**
   * Show in featured testimonials
   */
  featured?: boolean | null;
  publishedDate?: string | null;
  media?: {
    type?: ('none' | 'video' | 'audio') | null;
    /**
     * YouTube or Vimeo URL
     */
    videoUrl?: string | null;
    /**
     * Video thumbnail image
     */
    videoThumbnail?: (number | null) | Media;
    /**
     * Audio testimonial file
     */
    audioFile?: (number | null) | Media;
    /**
     * Duration (e.g., 2:30)
     */
    duration?: string | null;
  };
  project?: {
    /**
     * Related voiceover artist
     */
    voiceover?: (number | null) | Voiceover;
    projectType?:
      | ('commercial' | 'narration' | 'character' | 'elearning' | 'ivr' | 'podcast' | 'audiobook' | 'other')
      | null;
    /**
     * Name of the project
     */
    projectName?: string | null;
    /**
     * When the project was completed
     */
    completedDate?: string | null;
  };
  display?: {
    /**
     * Show company name
     */
    showCompany?: boolean | null;
    /**
     * Show job title
     */
    showTitle?: boolean | null;
    /**
     * Show avatar/photo
     */
    showAvatar?: boolean | null;
    /**
     * Show star rating
     */
    showRating?: boolean | null;
    /**
     * Text to highlight in the testimonial (will be bolded)
     */
    highlightText?: string | null;
    /**
     * Tags for filtering
     */
    tags?:
      | {
          tag?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  status?: ('published' | 'draft' | 'archived') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  /**
   * Internal form name
   */
  title: string;
  /**
   * Unique identifier for this form
   */
  slug: string;
  /**
   * Form description shown to users
   */
  description?: string | null;
  status: 'active' | 'inactive' | 'archived';
  fields: {
    fieldType:
      | 'text'
      | 'email'
      | 'tel'
      | 'number'
      | 'textarea'
      | 'select'
      | 'radio'
      | 'checkbox'
      | 'checkboxGroup'
      | 'date'
      | 'time'
      | 'file'
      | 'hidden'
      | 'heading'
      | 'paragraph';
    /**
     * Field name (no spaces, used in code)
     */
    name: string;
    /**
     * Label shown to users
     */
    label?: string | null;
    placeholder?: string | null;
    /**
     * Help text shown below the field
     */
    helpText?: string | null;
    required?: boolean | null;
    validation?: {
      minLength?: number | null;
      maxLength?: number | null;
      min?: number | null;
      max?: number | null;
      /**
       * Regular expression pattern
       */
      pattern?: string | null;
      /**
       * Custom validation error message
       */
      customError?: string | null;
    };
    options?:
      | {
          label: string;
          value: string;
          id?: string | null;
        }[]
      | null;
    defaultValue?: string | null;
    /**
     * Content for heading or paragraph
     */
    content?: string | null;
    width?: ('full' | 'half' | 'third' | 'two-thirds') | null;
    conditionalLogic?: {
      enabled?: boolean | null;
      showIf?: ('all' | 'any') | null;
      conditions?:
        | {
            /**
             * Field name to check
             */
            field?: string | null;
            operator?: ('equals' | 'not_equals' | 'contains' | 'is_empty' | 'is_not_empty') | null;
            value?: string | null;
            id?: string | null;
          }[]
        | null;
    };
    id?: string | null;
  }[];
  settings?: {
    submitButton?: {
      text?: string | null;
      style?: ('primary' | 'secondary' | 'outline') | null;
      position?: ('left' | 'center' | 'right') | null;
    };
    /**
     * Message shown after successful submission
     */
    successMessage?: string | null;
    /**
     * Message shown if submission fails
     */
    errorMessage?: string | null;
    /**
     * Optional URL to redirect to after submission
     */
    redirectUrl?: string | null;
    /**
     * Require user to be logged in to submit
     */
    requireLogin?: boolean | null;
    /**
     * Enable Google reCAPTCHA
     */
    enableRecaptcha?: boolean | null;
    /**
     * Save form submissions to database
     */
    saveSubmissions?: boolean | null;
    emailNotifications?: {
      enabled?: boolean | null;
      sendTo?:
        | {
            email: string;
            id?: string | null;
          }[]
        | null;
      subject?: string | null;
      /**
       * Field name containing email address for reply-to
       */
      replyTo?: string | null;
    };
    autoResponder?: {
      enabled?: boolean | null;
      /**
       * Field name containing recipient email
       */
      emailField?: string | null;
      subject?: string | null;
      /**
       * Email message. Use {{fieldname}} to include form values.
       */
      message?: string | null;
    };
  };
  style?: {
    layout?: ('stacked' | 'inline' | 'floating') | null;
    theme?: ('default' | 'minimal' | 'modern' | 'classic') | null;
    fieldSpacing?: ('compact' | 'medium' | 'large') | null;
    /**
     * Custom CSS for this form
     */
    customCSS?: string | null;
  };
  /**
   * Total number of submissions
   */
  submissions?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  /**
   * Form submission data
   */
  data:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status?: ('new' | 'read' | 'replied' | 'archived' | 'spam') | null;
  /**
   * Internal notes about this submission
   */
  notes?: string | null;
  submittedAt: string;
  /**
   * User who submitted (if logged in)
   */
  submittedBy?: (number | null) | User;
  ipAddress?: string | null;
  userAgent?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage frequently asked questions and configure how they appear on the homepage
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq".
 */
export interface Faq {
  id: number;
  /**
   * The question that visitors frequently ask
   */
  question: string;
  /**
   * Detailed answer to the question
   */
  answer: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Category to group related questions
   */
  category?: ('general' | 'pricing' | 'delivery' | 'technical' | 'rights') | null;
  /**
   * Lower numbers appear first (0, 1, 2, ...)
   */
  order?: number | null;
  /**
   * Only published FAQ items will be shown on the website
   */
  published?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-components".
 */
export interface EmailComponent {
  id: number;
  /**
   * Component name (e.g., "Default Footer", "Holiday Header")
   */
  name: string;
  type: 'header' | 'footer' | 'signature' | 'cta' | 'other';
  /**
   * Component content - can include variables like {{companyAddress}}
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Plain text version for text-only emails
   */
  plainTextContent?: string | null;
  /**
   * Variables used in this component
   */
  variables?:
    | {
        key: string;
        description?: string | null;
        defaultValue?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-templates".
 */
export interface EmailTemplate {
  id: number;
  /**
   * Template name (e.g., "Welcome Email", "Order Confirmation")
   */
  name: string;
  /**
   * Unique key for programmatic access (e.g., "welcome-email")
   */
  key: string;
  /**
   * Email subject line - supports variables like {{userName}}
   */
  subject: string;
  /**
   * Preview text shown in email clients
   */
  previewText?: string | null;
  /**
   * Override default sender name
   */
  fromName?: string | null;
  /**
   * Override default sender email
   */
  fromEmail?: string | null;
  /**
   * Reply-to email address
   */
  replyTo?: string | null;
  header?: (number | null) | EmailComponent;
  /**
   * Email body content - supports variables and Handlebars syntax
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Plain text version for text-only email clients
   */
  plainTextContent?: string | null;
  footer?: (number | null) | EmailComponent;
  /**
   * Variables available in this template
   */
  variables?:
    | {
        key: string;
        description?: string | null;
        required?: boolean | null;
        defaultValue?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Test data for preview (JSON format)
   */
  testData?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Whether this template is active and can be used
   */
  active?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-sequences".
 */
export interface EmailSequence {
  id: number;
  /**
   * Sequence name (e.g., "New User Onboarding")
   */
  name: string;
  /**
   * Unique key for programmatic triggers (e.g., "user-onboarding")
   */
  key: string;
  /**
   * What this sequence does and when it triggers
   */
  description?: string | null;
  triggerEvent: 'user_registered' | 'first_purchase' | 'booking_created' | 'script_uploaded' | 'custom';
  emails: {
    template: number | EmailTemplate;
    /**
     * Delay before sending this email
     */
    delayValue: number;
    delayUnit: 'minutes' | 'hours' | 'days' | 'weeks';
    /**
     * Optional JS condition to evaluate before sending (return true to send)
     */
    condition?: string | null;
    id?: string | null;
  }[];
  /**
   * Whether this sequence is active
   */
  active?: boolean | null;
  /**
   * Stop sequence if user replies to any email
   */
  stopOnReply?: boolean | null;
  /**
   * Stop sequence if user unsubscribes
   */
  stopOnUnsubscribe?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-logs".
 */
export interface EmailLog {
  id: number;
  recipient?: (number | null) | User;
  /**
   * Email address (denormalized for queries)
   */
  recipientEmail: string;
  template: number | EmailTemplate;
  /**
   * If sent as part of a sequence
   */
  sequence?: (number | null) | EmailSequence;
  /**
   * Position in sequence (0-based)
   */
  sequenceEmailIndex?: number | null;
  subject: string;
  status: 'pending' | 'sent' | 'delivered' | 'opened' | 'clicked' | 'bounced' | 'failed' | 'unsubscribed';
  sentAt?: string | null;
  deliveredAt?: string | null;
  openedAt?: string | null;
  clickedAt?: string | null;
  /**
   * Number of times email was opened
   */
  openCount?: number | null;
  /**
   * Number of clicks on links
   */
  clickCount?: number | null;
  /**
   * Resend API email ID
   */
  resendId?: string | null;
  /**
   * Error message if sending failed
   */
  error?: string | null;
  /**
   * Additional metadata from Resend webhooks
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-jobs".
 */
export interface EmailJob {
  id: number;
  recipient: number | User;
  template: number | EmailTemplate;
  /**
   * If part of a sequence
   */
  sequence?: (number | null) | EmailSequence;
  /**
   * Position in sequence
   */
  sequenceEmailIndex?: number | null;
  /**
   * When to send this email
   */
  scheduledFor: string;
  status: 'scheduled' | 'processing' | 'sent' | 'failed' | 'cancelled';
  /**
   * Variables to use when rendering template
   */
  variables?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Number of send attempts
   */
  attempts?: number | null;
  lastAttempt?: string | null;
  /**
   * Last error message
   */
  error?: string | null;
  /**
   * Created after successful send
   */
  emailLog?: (number | null) | EmailLog;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-campaigns".
 */
export interface EmailCampaign {
  id: number;
  /**
   * Campaign name for internal reference
   */
  name: string;
  /**
   * Email subject line - supports personalization like {{{first_name}}}
   */
  subject: string;
  /**
   * Preview text shown in email clients
   */
  previewText?: string | null;
  /**
   * Sender name
   */
  fromName?: string | null;
  /**
   * Sender email address
   */
  fromEmail?: string | null;
  /**
   * Reply-to email address
   */
  replyTo?: string | null;
  /**
   * Campaign content with visual editor
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Alternative markdown content for Resend
   */
  markdownContent?: string | null;
  contentType?: ('richtext' | 'markdown' | 'react') | null;
  /**
   * React Email component name
   */
  reactComponent?: string | null;
  /**
   * Target audience for this campaign
   */
  audience: number | EmailAudience;
  /**
   * Tags for organizing and filtering campaigns
   */
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  status?: ('draft' | 'scheduled' | 'sending' | 'sent' | 'cancelled') | null;
  /**
   * Schedule campaign for future sending
   */
  scheduledAt?: string | null;
  resendBroadcastId?: string | null;
  /**
   * Campaign performance metrics
   */
  analytics?: {
    sentCount?: number | null;
    deliveredCount?: number | null;
    openedCount?: number | null;
    clickedCount?: number | null;
    bouncedCount?: number | null;
    unsubscribedCount?: number | null;
    /**
     * Percentage of opens
     */
    openRate?: number | null;
    /**
     * Percentage of clicks
     */
    clickRate?: number | null;
  };
  /**
   * Send test emails before launching campaign
   */
  testEmails?:
    | {
        email: string;
        sentAt?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * A/B testing configuration
   */
  abTesting?: {
    enabled?: boolean | null;
    variants?:
      | {
          name: string;
          subject: string;
          percentage: number;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-audiences".
 */
export interface EmailAudience {
  id: number;
  /**
   * Audience name (e.g., "Newsletter Subscribers", "VIP Clients")
   */
  name: string;
  /**
   * Describe the purpose and criteria for this audience
   */
  description?: string | null;
  type: 'static' | 'dynamic' | 'all';
  /**
   * Resend Audience ID for syncing
   */
  resendAudienceId?: string | null;
  /**
   * Manually selected contacts for this audience
   */
  contacts?: (number | EmailContact)[] | null;
  /**
   * Dynamic segmentation rules
   */
  segmentRules?: {
    rules?:
      | {
          field: 'tags' | 'location' | 'engagement' | 'signupDate' | 'lastActivity' | 'custom';
          operator:
            | 'contains'
            | 'not_contains'
            | 'equals'
            | 'not_equals'
            | 'greater_than'
            | 'less_than'
            | 'is_empty'
            | 'is_not_empty';
          value?: string | null;
          /**
           * Custom field name
           */
          customField?: string | null;
          id?: string | null;
        }[]
      | null;
    logic?: ('all' | 'any') | null;
  };
  /**
   * Tags for organizing audiences
   */
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Number of contacts in this audience
   */
  contactCount?: number | null;
  /**
   * Whether this audience is active and can be used
   */
  active?: boolean | null;
  /**
   * Resend sync status
   */
  syncStatus?: {
    lastSyncedAt?: string | null;
    syncError?: string | null;
  };
  /**
   * Audience engagement statistics
   */
  statistics?: {
    /**
     * Average open rate percentage
     */
    avgOpenRate?: number | null;
    /**
     * Average click rate percentage
     */
    avgClickRate?: number | null;
    lastCampaignDate?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-contacts".
 */
export interface EmailContact {
  id: number;
  /**
   * Contact email address
   */
  email: string;
  /**
   * Contact first name
   */
  firstName?: string | null;
  /**
   * Contact last name
   */
  lastName?: string | null;
  /**
   * Resend Contact ID
   */
  resendContactId?: string | null;
  /**
   * Link to existing user account if applicable
   */
  user?: (number | null) | User;
  /**
   * Whether the contact is subscribed to emails
   */
  subscribed?: boolean | null;
  unsubscribedAt?: string | null;
  /**
   * Tags for segmentation and organization
   */
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Custom data fields for personalization
   */
  customFields?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  location?: {
    country?: string | null;
    state?: string | null;
    city?: string | null;
    /**
     * Timezone for optimal send times
     */
    timezone?: string | null;
  };
  /**
   * Email preferences
   */
  preferences?: {
    frequency?: ('all' | 'weekly' | 'monthly' | 'important') | null;
    /**
     * Subscribed email categories
     */
    categories?:
      | {
          category?: ('newsletter' | 'product' | 'promotions' | 'events' | 'educational') | null;
          id?: string | null;
        }[]
      | null;
  };
  /**
   * Engagement metrics
   */
  engagement?: {
    totalSent?: number | null;
    totalOpened?: number | null;
    totalClicked?: number | null;
    lastOpenedAt?: string | null;
    lastClickedAt?: string | null;
    /**
     * Calculated engagement score (0-100)
     */
    engagementScore?: number | null;
  };
  /**
   * Contact source information
   */
  source?: {
    type?: ('manual' | 'website' | 'api' | 'csv' | 'integration') | null;
    /**
     * Additional source details
     */
    detail?: string | null;
    signupDate?: string | null;
  };
  status?: ('active' | 'bounced' | 'complained' | 'suppressed') | null;
  /**
   * Internal notes about this contact
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Security event logs for monitoring and auditing
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "security-logs".
 */
export interface SecurityLog {
  id: number;
  type: 'auth_failure' | 'suspicious_activity' | 'rate_limit_exceeded' | 'invalid_input' | 'file_threat';
  severity: 'low' | 'medium' | 'high' | 'critical';
  /**
   * User ID associated with the event
   */
  userId?: string | null;
  /**
   * IP address of the request
   */
  ipAddress?: string | null;
  /**
   * User agent string
   */
  userAgent?: string | null;
  /**
   * Request path
   */
  path?: string | null;
  /**
   * HTTP method
   */
  method?: string | null;
  /**
   * Additional event details
   */
  details?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  timestamp: string;
  /**
   * Whether this security event has been reviewed and resolved
   */
  resolved?: boolean | null;
  /**
   * Admin who resolved this event
   */
  resolvedBy?: (number | null) | User;
  /**
   * When this event was resolved
   */
  resolvedAt?: string | null;
  /**
   * Admin notes about this event
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'groups';
        value: number | Group;
      } | null)
    | ({
        relationTo: 'voiceovers';
        value: number | Voiceover;
      } | null)
    | ({
        relationTo: 'bookings';
        value: number | Booking;
      } | null)
    | ({
        relationTo: 'scripts';
        value: number | Script;
      } | null)
    | ({
        relationTo: 'invoices';
        value: number | Invoice;
      } | null)
    | ({
        relationTo: 'blog-posts';
        value: number | BlogPost;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'faq';
        value: number | Faq;
      } | null)
    | ({
        relationTo: 'email-components';
        value: number | EmailComponent;
      } | null)
    | ({
        relationTo: 'email-templates';
        value: number | EmailTemplate;
      } | null)
    | ({
        relationTo: 'email-sequences';
        value: number | EmailSequence;
      } | null)
    | ({
        relationTo: 'email-logs';
        value: number | EmailLog;
      } | null)
    | ({
        relationTo: 'email-jobs';
        value: number | EmailJob;
      } | null)
    | ({
        relationTo: 'email-campaigns';
        value: number | EmailCampaign;
      } | null)
    | ({
        relationTo: 'email-audiences';
        value: number | EmailAudience;
      } | null)
    | ({
        relationTo: 'email-contacts';
        value: number | EmailContact;
      } | null)
    | ({
        relationTo: 'security-logs';
        value: number | SecurityLog;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  avatar?: T;
  avatarURL?: T;
  avatarColor?: T;
  role?: T;
  jobTitle?: T;
  phone?: T;
  bio?: T;
  socialLinks?:
    | T
    | {
        linkedin?: T;
        instagram?: T;
      };
  lastLogin?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  uploadedBy?: T;
  scanStatus?: T;
  scanDetails?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "groups_select".
 */
export interface GroupsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  isActive?: T;
  voiceoverCount?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "voiceovers_select".
 */
export interface VoiceoversSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  profilePhoto?: T;
  additionalPhotos?:
    | T
    | {
        photo?: T;
        caption?: T;
        id?: T;
      };
  styleTags?:
    | T
    | {
        tag?: T;
        customTag?: T;
        id?: T;
      };
  fullDemoReel?: T;
  commercialsDemo?: T;
  narrativeDemo?: T;
  status?: T;
  group?: T;
  availability?:
    | T
    | {
        isAvailable?: T;
        unavailableFrom?: T;
        unavailableUntil?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookings_select".
 */
export interface BookingsSelect<T extends boolean = true> {
  title?: T;
  customer?: T;
  voiceover?: T;
  status?: T;
  projectType?: T;
  deadline?: T;
  budget?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "scripts_select".
 */
export interface ScriptsSelect<T extends boolean = true> {
  title?: T;
  uploadedBy?: T;
  assignedVoiceover?: T;
  scriptType?: T;
  language?: T;
  wordCount?: T;
  estimatedDuration?: T;
  confidentialityLevel?: T;
  instructions?: T;
  originalFilename?: T;
  deadline?: T;
  accessLog?:
    | T
    | {
        accessedBy?: T;
        accessedAt?: T;
        action?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "invoices_select".
 */
export interface InvoicesSelect<T extends boolean = true> {
  invoiceNumber?: T;
  client?: T;
  provider?: T;
  status?: T;
  amount?: T;
  currency?: T;
  issueDate?: T;
  dueDate?: T;
  paidDate?: T;
  notes?: T;
  accessLog?:
    | T
    | {
        accessedBy?: T;
        accessedAt?: T;
        action?: T;
        id?: T;
      };
  originalFilename?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-posts_select".
 */
export interface BlogPostsSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  slug?: T;
  bannerImage?: T;
  content?: T;
  excerpt?: T;
  meta?: T | MetaSelect<T>;
  openGraph?:
    | T
    | {
        title?: T;
        description?: T;
        type?: T;
      };
  author?: T;
  categories?:
    | T
    | {
        category?: T;
        id?: T;
      };
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  status?: T;
  publishedDate?: T;
  featured?: T;
  enableComments?: T;
  views?: T;
  readingTime?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Meta_select".
 */
export interface MetaSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  keywords?:
    | T
    | {
        keyword?: T;
        id?: T;
      };
  image?: T;
  noIndex?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  hero?:
    | T
    | {
        type?: T;
        processSteps?:
          | T
          | {
              text?: T;
              id?: T;
            };
        title?: T;
        subtitle?: T;
        description?: T;
        image?: T;
        heroImage?: T;
        videoUrl?: T;
        primaryButton?:
          | T
          | {
              text?: T;
              url?: T;
            };
        secondaryButton?:
          | T
          | {
              text?: T;
              url?: T;
            };
        cta?:
          | T
          | {
              text?: T;
              link?: T;
              style?: T;
            };
        stats?:
          | T
          | {
              number?: T;
              label?: T;
              id?: T;
            };
      };
  content?: T;
  sections?:
    | T
    | {
        type?: T;
        richTextContent?: T;
        leftColumn?: T;
        rightColumn?: T;
        columnRatio?: T;
        ctaHeading?: T;
        ctaText?: T;
        ctaButtons?:
          | T
          | {
              text?: T;
              link?: T;
              style?: T;
              id?: T;
            };
        ctaBackgroundColor?: T;
        contactHeading?: T;
        contactSubheading?: T;
        showContactForm?: T;
        contactEmail?: T;
        contactPhone?: T;
        pricingHeading?: T;
        pricingSubheading?: T;
        pricingPlans?:
          | T
          | {
              name?: T;
              price?: T;
              description?: T;
              features?:
                | T
                | {
                    feature?: T;
                    id?: T;
                  };
              highlighted?: T;
              buttonText?: T;
              buttonLink?: T;
              id?: T;
            };
        testimonialsHeading?: T;
        testimonialsSubheading?: T;
        testimonialsSource?: T;
        selectedTestimonials?: T;
        testimonialsLimit?: T;
        faqHeading?: T;
        faqSubheading?: T;
        faqs?:
          | T
          | {
              question?: T;
              answer?: T;
              id?: T;
            };
        galleryHeading?: T;
        galleryImages?: T;
        galleryLayout?: T;
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?:
          | T
          | {
              keyword?: T;
              id?: T;
            };
        image?: T;
        noIndex?: T;
      };
  openGraph?:
    | T
    | {
        title?: T;
        description?: T;
        type?: T;
      };
  parent?: T;
  status?: T;
  publishedDate?: T;
  showInNav?: T;
  navOrder?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  status?: T;
  fields?:
    | T
    | {
        fieldType?: T;
        name?: T;
        label?: T;
        placeholder?: T;
        helpText?: T;
        required?: T;
        validation?:
          | T
          | {
              minLength?: T;
              maxLength?: T;
              min?: T;
              max?: T;
              pattern?: T;
              customError?: T;
            };
        options?:
          | T
          | {
              label?: T;
              value?: T;
              id?: T;
            };
        defaultValue?: T;
        content?: T;
        width?: T;
        conditionalLogic?:
          | T
          | {
              enabled?: T;
              showIf?: T;
              conditions?:
                | T
                | {
                    field?: T;
                    operator?: T;
                    value?: T;
                    id?: T;
                  };
            };
        id?: T;
      };
  settings?:
    | T
    | {
        submitButton?:
          | T
          | {
              text?: T;
              style?: T;
              position?: T;
            };
        successMessage?: T;
        errorMessage?: T;
        redirectUrl?: T;
        requireLogin?: T;
        enableRecaptcha?: T;
        saveSubmissions?: T;
        emailNotifications?:
          | T
          | {
              enabled?: T;
              sendTo?:
                | T
                | {
                    email?: T;
                    id?: T;
                  };
              subject?: T;
              replyTo?: T;
            };
        autoResponder?:
          | T
          | {
              enabled?: T;
              emailField?: T;
              subject?: T;
              message?: T;
            };
      };
  style?:
    | T
    | {
        layout?: T;
        theme?: T;
        fieldSpacing?: T;
        customCSS?: T;
      };
  submissions?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  data?: T;
  status?: T;
  notes?: T;
  submittedAt?: T;
  submittedBy?: T;
  ipAddress?: T;
  userAgent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  name?: T;
  title?: T;
  company?: T;
  avatar?: T;
  testimonial?: T;
  rating?: T;
  featured?: T;
  publishedDate?: T;
  media?:
    | T
    | {
        type?: T;
        videoUrl?: T;
        videoThumbnail?: T;
        audioFile?: T;
        duration?: T;
      };
  project?:
    | T
    | {
        voiceover?: T;
        projectType?: T;
        projectName?: T;
        completedDate?: T;
      };
  display?:
    | T
    | {
        showCompany?: T;
        showTitle?: T;
        showAvatar?: T;
        showRating?: T;
        highlightText?: T;
        tags?:
          | T
          | {
              tag?: T;
              id?: T;
            };
      };
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq_select".
 */
export interface FaqSelect<T extends boolean = true> {
  question?: T;
  answer?: T;
  category?: T;
  order?: T;
  published?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-components_select".
 */
export interface EmailComponentsSelect<T extends boolean = true> {
  name?: T;
  type?: T;
  content?: T;
  plainTextContent?: T;
  variables?:
    | T
    | {
        key?: T;
        description?: T;
        defaultValue?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-templates_select".
 */
export interface EmailTemplatesSelect<T extends boolean = true> {
  name?: T;
  key?: T;
  subject?: T;
  previewText?: T;
  fromName?: T;
  fromEmail?: T;
  replyTo?: T;
  header?: T;
  content?: T;
  plainTextContent?: T;
  footer?: T;
  variables?:
    | T
    | {
        key?: T;
        description?: T;
        required?: T;
        defaultValue?: T;
        id?: T;
      };
  testData?: T;
  active?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-sequences_select".
 */
export interface EmailSequencesSelect<T extends boolean = true> {
  name?: T;
  key?: T;
  description?: T;
  triggerEvent?: T;
  emails?:
    | T
    | {
        template?: T;
        delayValue?: T;
        delayUnit?: T;
        condition?: T;
        id?: T;
      };
  active?: T;
  stopOnReply?: T;
  stopOnUnsubscribe?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-logs_select".
 */
export interface EmailLogsSelect<T extends boolean = true> {
  recipient?: T;
  recipientEmail?: T;
  template?: T;
  sequence?: T;
  sequenceEmailIndex?: T;
  subject?: T;
  status?: T;
  sentAt?: T;
  deliveredAt?: T;
  openedAt?: T;
  clickedAt?: T;
  openCount?: T;
  clickCount?: T;
  resendId?: T;
  error?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-jobs_select".
 */
export interface EmailJobsSelect<T extends boolean = true> {
  recipient?: T;
  template?: T;
  sequence?: T;
  sequenceEmailIndex?: T;
  scheduledFor?: T;
  status?: T;
  variables?: T;
  attempts?: T;
  lastAttempt?: T;
  error?: T;
  emailLog?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-campaigns_select".
 */
export interface EmailCampaignsSelect<T extends boolean = true> {
  name?: T;
  subject?: T;
  previewText?: T;
  fromName?: T;
  fromEmail?: T;
  replyTo?: T;
  content?: T;
  markdownContent?: T;
  contentType?: T;
  reactComponent?: T;
  audience?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  status?: T;
  scheduledAt?: T;
  resendBroadcastId?: T;
  analytics?:
    | T
    | {
        sentCount?: T;
        deliveredCount?: T;
        openedCount?: T;
        clickedCount?: T;
        bouncedCount?: T;
        unsubscribedCount?: T;
        openRate?: T;
        clickRate?: T;
      };
  testEmails?:
    | T
    | {
        email?: T;
        sentAt?: T;
        id?: T;
      };
  abTesting?:
    | T
    | {
        enabled?: T;
        variants?:
          | T
          | {
              name?: T;
              subject?: T;
              percentage?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-audiences_select".
 */
export interface EmailAudiencesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  type?: T;
  resendAudienceId?: T;
  contacts?: T;
  segmentRules?:
    | T
    | {
        rules?:
          | T
          | {
              field?: T;
              operator?: T;
              value?: T;
              customField?: T;
              id?: T;
            };
        logic?: T;
      };
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  contactCount?: T;
  active?: T;
  syncStatus?:
    | T
    | {
        lastSyncedAt?: T;
        syncError?: T;
      };
  statistics?:
    | T
    | {
        avgOpenRate?: T;
        avgClickRate?: T;
        lastCampaignDate?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-contacts_select".
 */
export interface EmailContactsSelect<T extends boolean = true> {
  email?: T;
  firstName?: T;
  lastName?: T;
  resendContactId?: T;
  user?: T;
  subscribed?: T;
  unsubscribedAt?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  customFields?: T;
  location?:
    | T
    | {
        country?: T;
        state?: T;
        city?: T;
        timezone?: T;
      };
  preferences?:
    | T
    | {
        frequency?: T;
        categories?:
          | T
          | {
              category?: T;
              id?: T;
            };
      };
  engagement?:
    | T
    | {
        totalSent?: T;
        totalOpened?: T;
        totalClicked?: T;
        lastOpenedAt?: T;
        lastClickedAt?: T;
        engagementScore?: T;
      };
  source?:
    | T
    | {
        type?: T;
        detail?: T;
        signupDate?: T;
      };
  status?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "security-logs_select".
 */
export interface SecurityLogsSelect<T extends boolean = true> {
  type?: T;
  severity?: T;
  userId?: T;
  ipAddress?: T;
  userAgent?: T;
  path?: T;
  method?: T;
  details?: T;
  timestamp?: T;
  resolved?: T;
  resolvedBy?: T;
  resolvedAt?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-settings".
 */
export interface EmailSetting {
  id: number;
  /**
   * Default sender name for emails
   */
  defaultFromName: string;
  /**
   * Default sender email address
   */
  defaultFromEmail: string;
  /**
   * Default reply-to email address
   */
  defaultReplyTo?: string | null;
  /**
   * Email address to send test emails to (defaults to admin email)
   */
  testEmailRecipient?: string | null;
  companyName?: string | null;
  /**
   * Company address for email footers
   */
  companyAddress?: string | null;
  companyWebsite?: string | null;
  companyPhone?: string | null;
  companySocial?: {
    /**
     * Twitter/X handle (without @)
     */
    twitter?: string | null;
    /**
     * LinkedIn company page URL
     */
    linkedin?: string | null;
    /**
     * Facebook page URL
     */
    facebook?: string | null;
  };
  /**
   * URL for unsubscribe page
   */
  unsubscribeUrl?: string | null;
  unsubscribeText?: string | null;
  /**
   * Number of emails to process per batch
   */
  batchSize?: number | null;
  /**
   * Number of retry attempts for failed emails
   */
  retryAttempts?: number | null;
  /**
   * Delay in seconds between retry attempts
   */
  retryDelay?: number | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Configure how the FAQ section appears on the homepage
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq-settings".
 */
export interface FaqSetting {
  id: number;
  settings?: {
    /**
     * Show the FAQ section on the homepage
     */
    enabled?: boolean | null;
    /**
     * Title displayed above the FAQ section
     */
    title?: string | null;
    /**
     * Optional description text below the title
     */
    description?: string | null;
    /**
     * Maximum number of FAQ items to display on the homepage (1-50)
     */
    itemsToShow?: number | null;
    /**
     * Allow visitors to filter FAQ items by category
     */
    showCategories?: boolean | null;
    /**
     * Automatically expand the first FAQ item when the section loads
     */
    expandFirst?: boolean | null;
    /**
     * Allow multiple FAQ items to be expanded at the same time
     */
    multipleOpen?: boolean | null;
  };
  /**
   * Define categories for organizing FAQ items. Drag to reorder.
   */
  categories?:
    | {
        /**
         * Display name for the category
         */
        name: string;
        /**
         * URL-friendly identifier (auto-generated from name)
         */
        slug: string;
        /**
         * Optional description of what types of questions belong in this category
         */
        description?: string | null;
        /**
         * Whether this category is visible on the website
         */
        published?: boolean | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings".
 */
export interface SiteSetting {
  id: number;
  /**
   * The name of the website. This appears in browser tabs, search results, and when sharing links on social media. Important for SEO and brand recognition.
   */
  siteName: string;
  /**
   * The company logo that appears in the website header. Recommended size: 200x50 pixels. Used for brand identity and navigation. For best results, use SVG or PNG with transparent background.
   */
  logo?: (number | null) | Media;
  /**
   * The small icon that appears in browser tabs and bookmarks. Recommended: 32x32px SVG or PNG. If no favicon is uploaded, a default dark "14" icon will be used. Important for brand recognition and professional appearance.
   */
  favicon?: (number | null) | Media;
  /**
   * The complete URL of the website (e.g., https://14voices.com). Used for generating absolute URLs in sitemaps, RSS feeds, and social media meta tags. Critical for SEO and proper functioning of sharing features.
   */
  siteUrl: string;
  /**
   * The default language for the website content. This affects the language declaration in HTML, helping search engines understand the content language. Important for SEO and accessibility. Does not change CMS interface language.
   */
  language?: ('nl' | 'en' | 'es' | 'fr' | 'de') | null;
  contact?: {
    /**
     * Primary contact email address for business inquiries. This appears in the footer and contact sections of the website.
     */
    email?: string | null;
    /**
     * Primary contact phone number. Include country code for international visibility (e.g., +31 6 12345678).
     */
    phone?: string | null;
    address?: {
      street?: string | null;
      city?: string | null;
      state?: string | null;
      zip?: string | null;
      country?: string | null;
    };
    /**
     * Business hours (one per line). Example:
     * Monday-Friday: 9:00-17:00
     * Saturday: 10:00-15:00
     * Sunday: Closed
     */
    hours?: string | null;
  };
  socialLinks?: {
    /**
     * Complete URL to your Facebook page (e.g., https://facebook.com/14voices).
     */
    facebook?: string | null;
    /**
     * Complete URL to your Twitter/X profile (e.g., https://x.com/14voices).
     */
    twitter?: string | null;
    /**
     * Complete URL to your Instagram profile (e.g., https://instagram.com/14voices).
     */
    instagram?: string | null;
    /**
     * Complete URL to your LinkedIn company page or profile (e.g., https://linkedin.com/company/14voices).
     */
    linkedin?: string | null;
    /**
     * Complete URL to your YouTube channel (e.g., https://youtube.com/@14voices).
     */
    youtube?: string | null;
    /**
     * Complete URL to your TikTok profile (e.g., https://tiktok.com/@14voices).
     */
    tiktok?: string | null;
  };
  defaultSeo?: {
    /**
     * Template for browser tab titles. Use %s where the page-specific title should appear (e.g., "%s | 14voices"). This template is used when pages don't have their own custom title. Important for SEO and user navigation.
     */
    title?: string | null;
    /**
     * Default description for search engine results. Used when pages don't have their own description. Should be 150-160 characters for optimal display. This text appears under the page title in search results.
     */
    description?: string | null;
    /**
     * Default keywords for SEO. While less important for modern SEO, they can still help with content categorization. Focus on 5-10 relevant keywords that describe your business.
     */
    keywords?:
      | {
          keyword?: string | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Default image shown when pages are shared on social media. Recommended size: 1200x630 pixels. Used when pages don't have their own social image. Important for engagement on Facebook, LinkedIn, etc.
     */
    image?: (number | null) | Media;
  };
  openGraph?: {
    /**
     * Site name for Open Graph protocol (Facebook, LinkedIn, etc.). Usually the same as your site name. This appears above the page title when shared on social media.
     */
    siteName?: string | null;
    /**
     * Type of content for Open Graph. "Website" for general pages, "Article" for blog posts and news. This helps social media platforms display your content appropriately.
     */
    type?: ('website' | 'article') | null;
  };
  twitterCard?: {
    /**
     * How content appears when shared on Twitter/X. "Summary" shows a small square image, "Summary Large Image" shows a large rectangular image. Large image typically gets more engagement.
     */
    cardType?: ('summary' | 'summary_large_image') | null;
    /**
     * Your Twitter/X username including the @ symbol (e.g., @14voices). This links shared content back to your Twitter/X account and can increase followers.
     */
    handle?: string | null;
  };
  analytics?: {
    /**
     * Google Analytics 4 Measurement ID (e.g., G-XXXXXXXXXX). Find this in your Google Analytics property settings.
     */
    googleAnalyticsId?: string | null;
    /**
     * Google Tag Manager Container ID (e.g., GTM-XXXXXX). Find this in your GTM container settings.
     */
    googleTagManagerId?: string | null;
    /**
     * Facebook/Meta Pixel ID. Find this in your Facebook Business Manager under Events Manager.
     */
    facebookPixelId?: string | null;
    customScripts?: {
      /**
       * Scripts to inject in the <head> section. Be careful: incorrect scripts can break your site.
       */
      headScripts?: string | null;
      /**
       * Scripts to inject before the closing </body> tag. Always test after adding new scripts.
       */
      bodyScripts?: string | null;
    };
  };
  branding?: {
    /**
     * Choose between text logo or image logo
     */
    logoType?: ('text' | 'image') | null;
    /**
     * Text to display as logo
     */
    logoText?: string | null;
    /**
     * Image to use as logo (recommended: SVG or PNG with transparent background)
     */
    logoImage?: (number | null) | Media;
    /**
     * Optional: Different logo for dark mode (if not provided, same logo will be used)
     */
    logoImageDark?: (number | null) | Media;
  };
  navigation?: {
    /**
     * Navigation items to display in the main menu
     */
    mainMenuItems?:
      | {
          /**
           * Display text for the menu item
           */
          label: string;
          /**
           * URL path (e.g., /voiceovers) or anchor (#voiceovers)
           */
          url: string;
          /**
           * Show dropdown arrow (dropdown content can be configured later)
           */
          hasDropdown?: boolean | null;
          /**
           * Open link in a new tab/window
           */
          openInNewTab?: boolean | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Text for the login link
     */
    loginText?: string | null;
    /**
     * URL for the login link
     */
    loginUrl?: string | null;
    /**
     * Text for the call-to-action button (only visible when user is logged in)
     */
    ctaButtonText?: string | null;
    /**
     * URL for the call-to-action button (button only shows when user is logged in)
     */
    ctaButtonUrl?: string | null;
  };
  topBar?: {
    /**
     * Show the top bar with contact details and quick links
     */
    enabled?: boolean | null;
    /**
     * WhatsApp number for contact (include country code). Default: +31 6 12345678
     */
    whatsappNumber?: string | null;
    /**
     * Configure the tooltip that appears when hovering over the WhatsApp number
     */
    whatsappTooltip?: {
      /**
       * Show a tooltip when hovering over the WhatsApp number
       */
      enabled?: boolean | null;
      /**
       * Title text for the tooltip. Default: "Stuur ons een WhatsApp"
       */
      title?: string | null;
      /**
       * Message text for the tooltip. Default: "We zijn vaak in de studio aan het werk. Stuur ons eerst een WhatsApp-bericht, dan kunnen we je zo snel mogelijk terugbellen."
       */
      message?: string | null;
      /**
       * Optional image to show in the tooltip (recommended: 80x80px)
       */
      image?: (number | null) | Media;
    };
    /**
     * Primary contact email address. Default: casting@14voices.com
     */
    email?: string | null;
    /**
     * Navigation links to display in the top bar. Default links: "Veelgestelde vragen" (/veelgestelde-vragen) and "Blog" (/blog)
     */
    quickLinks?:
      | {
          /**
           * Display text for the link
           */
          label: string;
          /**
           * URL path (e.g., /veelgestelde-vragen) or external URL
           */
          url: string;
          /**
           * Open link in a new tab/window
           */
          openInNewTab?: boolean | null;
          id?: string | null;
        }[]
      | null;
  };
  features?: {
    /**
     * ⚠️ WARNING: Disabling this will remove search functionality from your entire website. Visitors will not be able to search for content.
     */
    enableSearch?: boolean | null;
    /**
     * ⚠️ WARNING: Disabling this will hide all blog posts and the blog section from your website. This affects SEO and content visibility.
     */
    enableBlog?: boolean | null;
    maintenanceMode?: boolean | null;
    /**
     * Main heading displayed on the maintenance page
     */
    maintenanceTitle?: string | null;
    /**
     * Main message to show visitors during maintenance
     */
    maintenanceMessage?: string | null;
    /**
     * Label displayed above the contact email during maintenance
     */
    maintenanceContactLabel?: string | null;
    /**
     * Display contact email on the maintenance page
     */
    showContactEmail?: boolean | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-settings_select".
 */
export interface EmailSettingsSelect<T extends boolean = true> {
  defaultFromName?: T;
  defaultFromEmail?: T;
  defaultReplyTo?: T;
  testEmailRecipient?: T;
  companyName?: T;
  companyAddress?: T;
  companyWebsite?: T;
  companyPhone?: T;
  companySocial?:
    | T
    | {
        twitter?: T;
        linkedin?: T;
        facebook?: T;
      };
  unsubscribeUrl?: T;
  unsubscribeText?: T;
  batchSize?: T;
  retryAttempts?: T;
  retryDelay?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq-settings_select".
 */
export interface FaqSettingsSelect<T extends boolean = true> {
  settings?:
    | T
    | {
        enabled?: T;
        title?: T;
        description?: T;
        itemsToShow?: T;
        showCategories?: T;
        expandFirst?: T;
        multipleOpen?: T;
      };
  categories?:
    | T
    | {
        name?: T;
        slug?: T;
        description?: T;
        published?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  siteName?: T;
  logo?: T;
  favicon?: T;
  siteUrl?: T;
  language?: T;
  contact?:
    | T
    | {
        email?: T;
        phone?: T;
        address?:
          | T
          | {
              street?: T;
              city?: T;
              state?: T;
              zip?: T;
              country?: T;
            };
        hours?: T;
      };
  socialLinks?:
    | T
    | {
        facebook?: T;
        twitter?: T;
        instagram?: T;
        linkedin?: T;
        youtube?: T;
        tiktok?: T;
      };
  defaultSeo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?:
          | T
          | {
              keyword?: T;
              id?: T;
            };
        image?: T;
      };
  openGraph?:
    | T
    | {
        siteName?: T;
        type?: T;
      };
  twitterCard?:
    | T
    | {
        cardType?: T;
        handle?: T;
      };
  analytics?:
    | T
    | {
        googleAnalyticsId?: T;
        googleTagManagerId?: T;
        facebookPixelId?: T;
        customScripts?:
          | T
          | {
              headScripts?: T;
              bodyScripts?: T;
            };
      };
  branding?:
    | T
    | {
        logoType?: T;
        logoText?: T;
        logoImage?: T;
        logoImageDark?: T;
      };
  navigation?:
    | T
    | {
        mainMenuItems?:
          | T
          | {
              label?: T;
              url?: T;
              hasDropdown?: T;
              openInNewTab?: T;
              id?: T;
            };
        loginText?: T;
        loginUrl?: T;
        ctaButtonText?: T;
        ctaButtonUrl?: T;
      };
  topBar?:
    | T
    | {
        enabled?: T;
        whatsappNumber?: T;
        whatsappTooltip?:
          | T
          | {
              enabled?: T;
              title?: T;
              message?: T;
              image?: T;
            };
        email?: T;
        quickLinks?:
          | T
          | {
              label?: T;
              url?: T;
              openInNewTab?: T;
              id?: T;
            };
      };
  features?:
    | T
    | {
        enableSearch?: T;
        enableBlog?: T;
        maintenanceMode?: T;
        maintenanceTitle?: T;
        maintenanceMessage?: T;
        maintenanceContactLabel?: T;
        showContactEmail?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}